   1               		.file	"chpipes.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.chPipeObjectInit,"ax",@progbits
  11               	.global	chPipeObjectInit
  13               	chPipeObjectInit:
  14               	.LFB195:
  15               		.file 1 "../../../os/oslib/src/chpipes.c"
   1:../../../os/oslib/src/chpipes.c **** /*
   2:../../../os/oslib/src/chpipes.c ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:../../../os/oslib/src/chpipes.c ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:../../../os/oslib/src/chpipes.c **** 
   5:../../../os/oslib/src/chpipes.c ****     This file is part of ChibiOS.
   6:../../../os/oslib/src/chpipes.c **** 
   7:../../../os/oslib/src/chpipes.c ****     ChibiOS is free software; you can redistribute it and/or modify
   8:../../../os/oslib/src/chpipes.c ****     it under the terms of the GNU General Public License as published by
   9:../../../os/oslib/src/chpipes.c ****     the Free Software Foundation version 3 of the License.
  10:../../../os/oslib/src/chpipes.c **** 
  11:../../../os/oslib/src/chpipes.c ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/oslib/src/chpipes.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/oslib/src/chpipes.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/oslib/src/chpipes.c ****     GNU General Public License for more details.
  15:../../../os/oslib/src/chpipes.c **** 
  16:../../../os/oslib/src/chpipes.c ****     You should have received a copy of the GNU General Public License
  17:../../../os/oslib/src/chpipes.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/oslib/src/chpipes.c **** */
  19:../../../os/oslib/src/chpipes.c **** 
  20:../../../os/oslib/src/chpipes.c **** /**
  21:../../../os/oslib/src/chpipes.c ****  * @file    oslib/src/chpipes.c
  22:../../../os/oslib/src/chpipes.c ****  * @brief   Pipes code.
  23:../../../os/oslib/src/chpipes.c ****  * @details Byte pipes.
  24:../../../os/oslib/src/chpipes.c ****  *          <h2>Operation mode</h2>
  25:../../../os/oslib/src/chpipes.c ****  *          A pipe is an asynchronous communication mechanism.<br>
  26:../../../os/oslib/src/chpipes.c ****  *          Operations defined for mailboxes:
  27:../../../os/oslib/src/chpipes.c ****  *          - <b>Write</b>: Writes a buffer of data in the pipe in FIFO order.
  28:../../../os/oslib/src/chpipes.c ****  *          - <b>Read</b>: A buffer of data is read from the read and removed.
  29:../../../os/oslib/src/chpipes.c ****  *          - <b>Reset</b>: The pipe is emptied and all the stored data
  30:../../../os/oslib/src/chpipes.c ****  *            is lost.
  31:../../../os/oslib/src/chpipes.c ****  *          .
  32:../../../os/oslib/src/chpipes.c ****  * @pre     In order to use the pipes APIs the @p CH_CFG_USE_PIPES
  33:../../../os/oslib/src/chpipes.c ****  *          option must be enabled in @p chconf.h.
  34:../../../os/oslib/src/chpipes.c ****  * @note    Compatible with RT and NIL.
  35:../../../os/oslib/src/chpipes.c ****  *
  36:../../../os/oslib/src/chpipes.c ****  * @addtogroup oslib_pipes
  37:../../../os/oslib/src/chpipes.c ****  * @{
  38:../../../os/oslib/src/chpipes.c ****  */
  39:../../../os/oslib/src/chpipes.c **** 
  40:../../../os/oslib/src/chpipes.c **** #include <string.h>
  41:../../../os/oslib/src/chpipes.c **** 
  42:../../../os/oslib/src/chpipes.c **** #include "ch.h"
  43:../../../os/oslib/src/chpipes.c **** 
  44:../../../os/oslib/src/chpipes.c **** #if (CH_CFG_USE_PIPES == TRUE) || defined(__DOXYGEN__)
  45:../../../os/oslib/src/chpipes.c **** 
  46:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
  47:../../../os/oslib/src/chpipes.c **** /* Module local definitions.                                                 */
  48:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
  49:../../../os/oslib/src/chpipes.c **** 
  50:../../../os/oslib/src/chpipes.c **** /*
  51:../../../os/oslib/src/chpipes.c ****  * Defaults on the best synchronization mechanism available.
  52:../../../os/oslib/src/chpipes.c ****  */
  53:../../../os/oslib/src/chpipes.c **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
  54:../../../os/oslib/src/chpipes.c **** #define PC_INIT(p)       chMtxObjectInit(&(p)->cmtx)
  55:../../../os/oslib/src/chpipes.c **** #define PC_LOCK(p)       chMtxLock(&(p)->cmtx)
  56:../../../os/oslib/src/chpipes.c **** #define PC_UNLOCK(p)     chMtxUnlock(&(p)->cmtx)
  57:../../../os/oslib/src/chpipes.c **** #define PW_INIT(p)       chMtxObjectInit(&(p)->wmtx)
  58:../../../os/oslib/src/chpipes.c **** #define PW_LOCK(p)       chMtxLock(&(p)->wmtx)
  59:../../../os/oslib/src/chpipes.c **** #define PW_UNLOCK(p)     chMtxUnlock(&(p)->wmtx)
  60:../../../os/oslib/src/chpipes.c **** #define PR_INIT(p)       chMtxObjectInit(&(p)->rmtx)
  61:../../../os/oslib/src/chpipes.c **** #define PR_LOCK(p)       chMtxLock(&(p)->rmtx)
  62:../../../os/oslib/src/chpipes.c **** #define PR_UNLOCK(p)     chMtxUnlock(&(p)->rmtx)
  63:../../../os/oslib/src/chpipes.c **** #else
  64:../../../os/oslib/src/chpipes.c **** #define PC_INIT(p)       chSemObjectInit(&(p)->csem, (cnt_t)1)
  65:../../../os/oslib/src/chpipes.c **** #define PC_LOCK(p)       (void) chSemWait(&(p)->csem)
  66:../../../os/oslib/src/chpipes.c **** #define PC_UNLOCK(p)     chSemSignal(&(p)->csem)
  67:../../../os/oslib/src/chpipes.c **** #define PW_INIT(p)       chSemObjectInit(&(p)->wsem, (cnt_t)1)
  68:../../../os/oslib/src/chpipes.c **** #define PW_LOCK(p)       (void) chSemWait(&(p)->wsem)
  69:../../../os/oslib/src/chpipes.c **** #define PW_UNLOCK(p)     chSemSignal(&(p)->wsem)
  70:../../../os/oslib/src/chpipes.c **** #define PR_INIT(p)       chSemObjectInit(&(p)->rsem, (cnt_t)1)
  71:../../../os/oslib/src/chpipes.c **** #define PR_LOCK(p)       (void) chSemWait(&(p)->rsem)
  72:../../../os/oslib/src/chpipes.c **** #define PR_UNLOCK(p)     chSemSignal(&(p)->rsem)
  73:../../../os/oslib/src/chpipes.c **** #endif
  74:../../../os/oslib/src/chpipes.c **** 
  75:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
  76:../../../os/oslib/src/chpipes.c **** /* Module exported variables.                                                */
  77:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
  78:../../../os/oslib/src/chpipes.c **** 
  79:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
  80:../../../os/oslib/src/chpipes.c **** /* Module local types.                                                       */
  81:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
  82:../../../os/oslib/src/chpipes.c **** 
  83:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
  84:../../../os/oslib/src/chpipes.c **** /* Module local variables.                                                   */
  85:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
  86:../../../os/oslib/src/chpipes.c **** 
  87:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
  88:../../../os/oslib/src/chpipes.c **** /* Module local functions.                                                   */
  89:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
  90:../../../os/oslib/src/chpipes.c **** 
  91:../../../os/oslib/src/chpipes.c **** /**
  92:../../../os/oslib/src/chpipes.c ****  * @brief   Non-blocking pipe write.
  93:../../../os/oslib/src/chpipes.c ****  * @details The function writes data from a buffer to a pipe. The
  94:../../../os/oslib/src/chpipes.c ****  *          operation completes when the specified amount of data has been
  95:../../../os/oslib/src/chpipes.c ****  *          transferred or when the pipe buffer has been filled.
  96:../../../os/oslib/src/chpipes.c ****  *
  97:../../../os/oslib/src/chpipes.c ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
  98:../../../os/oslib/src/chpipes.c ****  * @param[in] bp        pointer to the data buffer
  99:../../../os/oslib/src/chpipes.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 100:../../../os/oslib/src/chpipes.c ****  *                      value 0 is reserved
 101:../../../os/oslib/src/chpipes.c ****  * @return              The number of bytes effectively transferred.
 102:../../../os/oslib/src/chpipes.c ****  *
 103:../../../os/oslib/src/chpipes.c ****  * @notapi
 104:../../../os/oslib/src/chpipes.c ****  */
 105:../../../os/oslib/src/chpipes.c **** static size_t pipe_write(pipe_t *pp, const uint8_t *bp, size_t n) {
 106:../../../os/oslib/src/chpipes.c ****   size_t s1, s2;
 107:../../../os/oslib/src/chpipes.c **** 
 108:../../../os/oslib/src/chpipes.c ****   PC_LOCK(pp);
 109:../../../os/oslib/src/chpipes.c **** 
 110:../../../os/oslib/src/chpipes.c ****   /* Number of bytes that can be written in a single atomic operation.*/
 111:../../../os/oslib/src/chpipes.c ****   if (n > chPipeGetFreeCount(pp)) {
 112:../../../os/oslib/src/chpipes.c ****     n = chPipeGetFreeCount(pp);
 113:../../../os/oslib/src/chpipes.c ****   }
 114:../../../os/oslib/src/chpipes.c ****   pp->cnt += n;
 115:../../../os/oslib/src/chpipes.c **** 
 116:../../../os/oslib/src/chpipes.c ****   /* Number of bytes before buffer limit.*/
 117:../../../os/oslib/src/chpipes.c ****   /*lint -save -e9033 [10.8] Checked to be safe.*/
 118:../../../os/oslib/src/chpipes.c ****   s1 = (size_t)(pp->top - pp->wrptr);
 119:../../../os/oslib/src/chpipes.c ****   /*lint -restore*/
 120:../../../os/oslib/src/chpipes.c **** 
 121:../../../os/oslib/src/chpipes.c ****   if (n < s1) {
 122:../../../os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, n);
 123:../../../os/oslib/src/chpipes.c ****     pp->wrptr += n;
 124:../../../os/oslib/src/chpipes.c ****   }
 125:../../../os/oslib/src/chpipes.c ****   else if (n > s1) {
 126:../../../os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, s1);
 127:../../../os/oslib/src/chpipes.c ****     bp += s1;
 128:../../../os/oslib/src/chpipes.c ****     s2 = n - s1;
 129:../../../os/oslib/src/chpipes.c ****     memcpy((void *)pp->buffer, (const void *)bp, s2);
 130:../../../os/oslib/src/chpipes.c ****     pp->wrptr = pp->buffer + s2;
 131:../../../os/oslib/src/chpipes.c ****   }
 132:../../../os/oslib/src/chpipes.c ****   else {
 133:../../../os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, n);
 134:../../../os/oslib/src/chpipes.c ****     pp->wrptr = pp->buffer;
 135:../../../os/oslib/src/chpipes.c ****   }
 136:../../../os/oslib/src/chpipes.c **** 
 137:../../../os/oslib/src/chpipes.c ****   PC_UNLOCK(pp);
 138:../../../os/oslib/src/chpipes.c **** 
 139:../../../os/oslib/src/chpipes.c ****   return n;
 140:../../../os/oslib/src/chpipes.c **** }
 141:../../../os/oslib/src/chpipes.c **** 
 142:../../../os/oslib/src/chpipes.c **** /**
 143:../../../os/oslib/src/chpipes.c ****  * @brief   Non-blocking pipe read.
 144:../../../os/oslib/src/chpipes.c ****  * @details The function reads data from a pipe into a buffer. The
 145:../../../os/oslib/src/chpipes.c ****  *          operation completes when the specified amount of data has been
 146:../../../os/oslib/src/chpipes.c ****  *          transferred or when the pipe buffer has been emptied.
 147:../../../os/oslib/src/chpipes.c ****  *
 148:../../../os/oslib/src/chpipes.c ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
 149:../../../os/oslib/src/chpipes.c ****  * @param[out] bp       pointer to the data buffer
 150:../../../os/oslib/src/chpipes.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 151:../../../os/oslib/src/chpipes.c ****  *                      value 0 is reserved
 152:../../../os/oslib/src/chpipes.c ****  * @return              The number of bytes effectively transferred.
 153:../../../os/oslib/src/chpipes.c ****  *
 154:../../../os/oslib/src/chpipes.c ****  * @notapi
 155:../../../os/oslib/src/chpipes.c ****  */
 156:../../../os/oslib/src/chpipes.c **** static size_t pipe_read(pipe_t *pp, uint8_t *bp, size_t n) {
 157:../../../os/oslib/src/chpipes.c ****   size_t s1, s2;
 158:../../../os/oslib/src/chpipes.c **** 
 159:../../../os/oslib/src/chpipes.c ****   PC_LOCK(pp);
 160:../../../os/oslib/src/chpipes.c **** 
 161:../../../os/oslib/src/chpipes.c ****   /* Number of bytes that can be read in a single atomic operation.*/
 162:../../../os/oslib/src/chpipes.c ****   if (n > chPipeGetUsedCount(pp)) {
 163:../../../os/oslib/src/chpipes.c ****     n = chPipeGetUsedCount(pp);
 164:../../../os/oslib/src/chpipes.c ****   }
 165:../../../os/oslib/src/chpipes.c ****   pp->cnt -= n;
 166:../../../os/oslib/src/chpipes.c **** 
 167:../../../os/oslib/src/chpipes.c ****   /* Number of bytes before buffer limit.*/
 168:../../../os/oslib/src/chpipes.c ****   /*lint -save -e9033 [10.8] Checked to be safe.*/
 169:../../../os/oslib/src/chpipes.c ****   s1 = (size_t)(pp->top - pp->rdptr);
 170:../../../os/oslib/src/chpipes.c ****   /*lint -restore*/
 171:../../../os/oslib/src/chpipes.c **** 
 172:../../../os/oslib/src/chpipes.c ****   if (n < s1) {
 173:../../../os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, n);
 174:../../../os/oslib/src/chpipes.c ****     pp->rdptr += n;
 175:../../../os/oslib/src/chpipes.c ****   }
 176:../../../os/oslib/src/chpipes.c ****   else if (n > s1) {
 177:../../../os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, s1);
 178:../../../os/oslib/src/chpipes.c ****     bp += s1;
 179:../../../os/oslib/src/chpipes.c ****     s2 = n - s1;
 180:../../../os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->buffer, s2);
 181:../../../os/oslib/src/chpipes.c ****     pp->rdptr = pp->buffer + s2;
 182:../../../os/oslib/src/chpipes.c ****   }
 183:../../../os/oslib/src/chpipes.c ****   else {
 184:../../../os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, n);
 185:../../../os/oslib/src/chpipes.c ****     pp->rdptr = pp->buffer;
 186:../../../os/oslib/src/chpipes.c ****   }
 187:../../../os/oslib/src/chpipes.c **** 
 188:../../../os/oslib/src/chpipes.c ****   PC_UNLOCK(pp);
 189:../../../os/oslib/src/chpipes.c **** 
 190:../../../os/oslib/src/chpipes.c ****   return n;
 191:../../../os/oslib/src/chpipes.c **** }
 192:../../../os/oslib/src/chpipes.c **** 
 193:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
 194:../../../os/oslib/src/chpipes.c **** /* Module exported functions.                                                */
 195:../../../os/oslib/src/chpipes.c **** /*===========================================================================*/
 196:../../../os/oslib/src/chpipes.c **** 
 197:../../../os/oslib/src/chpipes.c **** /**
 198:../../../os/oslib/src/chpipes.c ****  * @brief   Initializes a @p mailbox_t object.
 199:../../../os/oslib/src/chpipes.c ****  *
 200:../../../os/oslib/src/chpipes.c ****  * @param[out] pp       the pointer to the @p pipe_t object to be
 201:../../../os/oslib/src/chpipes.c ****  *                      initialized
 202:../../../os/oslib/src/chpipes.c ****  * @param[in] buf       pointer to the pipe buffer as an array of @p uint8_t
 203:../../../os/oslib/src/chpipes.c ****  * @param[in] n         number of elements in the buffer array
 204:../../../os/oslib/src/chpipes.c ****  *
 205:../../../os/oslib/src/chpipes.c ****  * @init
 206:../../../os/oslib/src/chpipes.c ****  */
 207:../../../os/oslib/src/chpipes.c **** void chPipeObjectInit(pipe_t *pp, uint8_t *buf, size_t n) {
  16               		.loc 1 207 0
  17               		.cfi_startproc
  18               	.LVL0:
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  31 0004 EC01      		movw r28,r24
 208:../../../os/oslib/src/chpipes.c **** 
 209:../../../os/oslib/src/chpipes.c ****   chDbgCheck((pp != NULL) && (buf != NULL) && (n > (size_t)0));
 210:../../../os/oslib/src/chpipes.c **** 
 211:../../../os/oslib/src/chpipes.c ****   pp->buffer = buf;
  32               		.loc 1 211 0
  33 0006 7983      		std Y+1,r23
  34 0008 6883      		st Y,r22
 212:../../../os/oslib/src/chpipes.c ****   pp->rdptr  = buf;
  35               		.loc 1 212 0
  36 000a 7F83      		std Y+7,r23
  37 000c 6E83      		std Y+6,r22
 213:../../../os/oslib/src/chpipes.c ****   pp->wrptr  = buf;
  38               		.loc 1 213 0
  39 000e 7D83      		std Y+5,r23
  40 0010 6C83      		std Y+4,r22
 214:../../../os/oslib/src/chpipes.c ****   pp->top    = &buf[n];
  41               		.loc 1 214 0
  42 0012 640F      		add r22,r20
  43 0014 751F      		adc r23,r21
  44               	.LVL1:
  45 0016 7B83      		std Y+3,r23
  46 0018 6A83      		std Y+2,r22
 215:../../../os/oslib/src/chpipes.c ****   pp->cnt    = (size_t)0;
  47               		.loc 1 215 0
  48 001a 1986      		std Y+9,__zero_reg__
  49 001c 1886      		std Y+8,__zero_reg__
 216:../../../os/oslib/src/chpipes.c ****   pp->reset  = false;
  50               		.loc 1 216 0
  51 001e 1A86      		std Y+10,__zero_reg__
 217:../../../os/oslib/src/chpipes.c ****   pp->wtr    = NULL;
  52               		.loc 1 217 0
  53 0020 1C86      		std Y+12,__zero_reg__
  54 0022 1B86      		std Y+11,__zero_reg__
 218:../../../os/oslib/src/chpipes.c ****   pp->rtr    = NULL;
  55               		.loc 1 218 0
  56 0024 1E86      		std Y+14,__zero_reg__
  57 0026 1D86      		std Y+13,__zero_reg__
 219:../../../os/oslib/src/chpipes.c ****   PC_INIT(pp);
  58               		.loc 1 219 0
  59 0028 0F96      		adiw r24,15
  60               	.LVL2:
  61 002a 0E94 0000 		call chMtxObjectInit
  62               	.LVL3:
 220:../../../os/oslib/src/chpipes.c ****   PW_INIT(pp);
  63               		.loc 1 220 0
  64 002e CE01      		movw r24,r28
  65 0030 4796      		adiw r24,23
  66 0032 0E94 0000 		call chMtxObjectInit
  67               	.LVL4:
 221:../../../os/oslib/src/chpipes.c ****   PR_INIT(pp);
  68               		.loc 1 221 0
  69 0036 CE01      		movw r24,r28
  70 0038 4F96      		adiw r24,31
  71               	/* epilogue start */
 222:../../../os/oslib/src/chpipes.c **** }
  72               		.loc 1 222 0
  73 003a DF91      		pop r29
  74 003c CF91      		pop r28
  75               	.LVL5:
 221:../../../os/oslib/src/chpipes.c ****   PR_INIT(pp);
  76               		.loc 1 221 0
  77 003e 0C94 0000 		jmp chMtxObjectInit
  78               	.LVL6:
  79               		.cfi_endproc
  80               	.LFE195:
  82               		.section	.text.chPipeReset,"ax",@progbits
  83               	.global	chPipeReset
  85               	chPipeReset:
  86               	.LFB196:
 223:../../../os/oslib/src/chpipes.c **** 
 224:../../../os/oslib/src/chpipes.c **** /**
 225:../../../os/oslib/src/chpipes.c ****  * @brief   Resets a @p pipe_t object.
 226:../../../os/oslib/src/chpipes.c ****  * @details All the waiting threads are resumed with status @p MSG_RESET and
 227:../../../os/oslib/src/chpipes.c ****  *          the queued data is lost.
 228:../../../os/oslib/src/chpipes.c ****  * @post    The pipe is in reset state, all operations will fail and
 229:../../../os/oslib/src/chpipes.c ****  *          return @p MSG_RESET until the mailbox is enabled again using
 230:../../../os/oslib/src/chpipes.c ****  *          @p chPipeResumeX().
 231:../../../os/oslib/src/chpipes.c ****  *
 232:../../../os/oslib/src/chpipes.c ****  * @param[in] pp        pointer to an initialized @p pipe_t object
 233:../../../os/oslib/src/chpipes.c ****  *
 234:../../../os/oslib/src/chpipes.c ****  * @api
 235:../../../os/oslib/src/chpipes.c ****  */
 236:../../../os/oslib/src/chpipes.c **** void chPipeReset(pipe_t *pp) {
  87               		.loc 1 236 0
  88               		.cfi_startproc
  89               	.LVL7:
  90 0000 0F93      		push r16
  91               	.LCFI2:
  92               		.cfi_def_cfa_offset 3
  93               		.cfi_offset 16, -2
  94 0002 1F93      		push r17
  95               	.LCFI3:
  96               		.cfi_def_cfa_offset 4
  97               		.cfi_offset 17, -3
  98 0004 CF93      		push r28
  99               	.LCFI4:
 100               		.cfi_def_cfa_offset 5
 101               		.cfi_offset 28, -4
 102 0006 DF93      		push r29
 103               	.LCFI5:
 104               		.cfi_def_cfa_offset 6
 105               		.cfi_offset 29, -5
 106               	/* prologue: function */
 107               	/* frame size = 0 */
 108               	/* stack size = 4 */
 109               	.L__stack_usage = 4
 110 0008 EC01      		movw r28,r24
 237:../../../os/oslib/src/chpipes.c **** 
 238:../../../os/oslib/src/chpipes.c ****   chDbgCheck(pp != NULL);
 239:../../../os/oslib/src/chpipes.c **** 
 240:../../../os/oslib/src/chpipes.c ****   PC_LOCK(pp);
 111               		.loc 1 240 0
 112 000a 8C01      		movw r16,r24
 113 000c 015F      		subi r16,-15
 114 000e 1F4F      		sbci r17,-1
 115 0010 C801      		movw r24,r16
 116               	.LVL8:
 117 0012 0E94 0000 		call chMtxLock
 118               	.LVL9:
 241:../../../os/oslib/src/chpipes.c **** 
 242:../../../os/oslib/src/chpipes.c ****   pp->wrptr = pp->buffer;
 119               		.loc 1 242 0
 120 0016 8881      		ld r24,Y
 121 0018 9981      		ldd r25,Y+1
 122 001a 9D83      		std Y+5,r25
 123 001c 8C83      		std Y+4,r24
 243:../../../os/oslib/src/chpipes.c ****   pp->rdptr = pp->buffer;
 124               		.loc 1 243 0
 125 001e 9F83      		std Y+7,r25
 126 0020 8E83      		std Y+6,r24
 244:../../../os/oslib/src/chpipes.c ****   pp->cnt   = (size_t)0;
 127               		.loc 1 244 0
 128 0022 1986      		std Y+9,__zero_reg__
 129 0024 1886      		std Y+8,__zero_reg__
 245:../../../os/oslib/src/chpipes.c ****   pp->reset = true;
 130               		.loc 1 245 0
 131 0026 81E0      		ldi r24,lo8(1)
 132 0028 8A87      		std Y+10,r24
 133               	.LBB50:
 134               	.LBB51:
 135               	.LBB52:
 136               		.file 2 "../../../os/common/ports/AVR/chcore.h"
   1:../../../os/common/ports/AVR/chcore.h **** /*
   2:../../../os/common/ports/AVR/chcore.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:../../../os/common/ports/AVR/chcore.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:../../../os/common/ports/AVR/chcore.h **** 
   5:../../../os/common/ports/AVR/chcore.h ****     This file is part of ChibiOS.
   6:../../../os/common/ports/AVR/chcore.h **** 
   7:../../../os/common/ports/AVR/chcore.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:../../../os/common/ports/AVR/chcore.h ****     it under the terms of the GNU General Public License as published by
   9:../../../os/common/ports/AVR/chcore.h ****     the Free Software Foundation version 3 of the License.
  10:../../../os/common/ports/AVR/chcore.h **** 
  11:../../../os/common/ports/AVR/chcore.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/common/ports/AVR/chcore.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/common/ports/AVR/chcore.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/common/ports/AVR/chcore.h ****     GNU General Public License for more details.
  15:../../../os/common/ports/AVR/chcore.h **** 
  16:../../../os/common/ports/AVR/chcore.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/common/ports/AVR/chcore.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/common/ports/AVR/chcore.h **** */
  19:../../../os/common/ports/AVR/chcore.h **** 
  20:../../../os/common/ports/AVR/chcore.h **** /**
  21:../../../os/common/ports/AVR/chcore.h ****  * @file    chcore.h
  22:../../../os/common/ports/AVR/chcore.h ****  * @brief   AVR port macros and structures.
  23:../../../os/common/ports/AVR/chcore.h ****  *
  24:../../../os/common/ports/AVR/chcore.h ****  * @addtogroup AVR_CORE
  25:../../../os/common/ports/AVR/chcore.h ****  * @{
  26:../../../os/common/ports/AVR/chcore.h ****  */
  27:../../../os/common/ports/AVR/chcore.h **** 
  28:../../../os/common/ports/AVR/chcore.h **** #ifndef CHCORE_H
  29:../../../os/common/ports/AVR/chcore.h **** #define CHCORE_H
  30:../../../os/common/ports/AVR/chcore.h **** 
  31:../../../os/common/ports/AVR/chcore.h **** #include <avr/io.h>
  32:../../../os/common/ports/AVR/chcore.h **** #include <avr/interrupt.h>
  33:../../../os/common/ports/AVR/chcore.h **** 
  34:../../../os/common/ports/AVR/chcore.h **** extern bool __avr_in_isr;
  35:../../../os/common/ports/AVR/chcore.h **** 
  36:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  37:../../../os/common/ports/AVR/chcore.h **** /* Module constants.                                                         */
  38:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
  39:../../../os/common/ports/AVR/chcore.h **** 
  40:../../../os/common/ports/AVR/chcore.h **** /**
  41:../../../os/common/ports/AVR/chcore.h ****  * @name    Port Capabilities and Constants
  42:../../../os/common/ports/AVR/chcore.h ****  * @{
  43:../../../os/common/ports/AVR/chcore.h ****  */
  44:../../../os/common/ports/AVR/chcore.h **** /**
  45:../../../os/common/ports/AVR/chcore.h ****  * @brief   This port supports a realtime counter.
  46:../../../os/common/ports/AVR/chcore.h ****  */
  47:../../../os/common/ports/AVR/chcore.h **** #define PORT_SUPPORTS_RT                FALSE
  48:../../../os/common/ports/AVR/chcore.h **** 
  49:../../../os/common/ports/AVR/chcore.h **** /**
  50:../../../os/common/ports/AVR/chcore.h ****  * @brief   Natural alignment constant.
  51:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the minimum alignment for pointer-size variables.
  52:../../../os/common/ports/AVR/chcore.h ****  */
  53:../../../os/common/ports/AVR/chcore.h **** #define PORT_NATURAL_ALIGN              1U
  54:../../../os/common/ports/AVR/chcore.h **** 
  55:../../../os/common/ports/AVR/chcore.h **** /**
  56:../../../os/common/ports/AVR/chcore.h ****  * @brief   Stack alignment constant.
  57:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignment required for the stack pointer.
  58:../../../os/common/ports/AVR/chcore.h ****  */
  59:../../../os/common/ports/AVR/chcore.h **** #define PORT_STACK_ALIGN                1U
  60:../../../os/common/ports/AVR/chcore.h **** 
  61:../../../os/common/ports/AVR/chcore.h **** /**
  62:../../../os/common/ports/AVR/chcore.h ****  * @brief   Working Areas alignment constant.
  63:../../../os/common/ports/AVR/chcore.h ****  * @note    It is the alignment to be enforced for thread working areas.
  64:../../../os/common/ports/AVR/chcore.h ****  */
  65:../../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA_ALIGN         1U
  66:../../../os/common/ports/AVR/chcore.h **** /** @} */
  67:../../../os/common/ports/AVR/chcore.h **** 
  68:../../../os/common/ports/AVR/chcore.h **** /**
  69:../../../os/common/ports/AVR/chcore.h ****  * @name    Architecture and Compiler
  70:../../../os/common/ports/AVR/chcore.h ****  * @{
  71:../../../os/common/ports/AVR/chcore.h ****  */
  72:../../../os/common/ports/AVR/chcore.h **** /**
  73:../../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining an AVR architecture.
  74:../../../os/common/ports/AVR/chcore.h ****  */
  75:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR
  76:../../../os/common/ports/AVR/chcore.h **** 
  77:../../../os/common/ports/AVR/chcore.h **** /**
  78:../../../os/common/ports/AVR/chcore.h ****  * @brief   Macro defining the specific AVR architecture.
  79:../../../os/common/ports/AVR/chcore.h ****  */
  80:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_AVR_MEGAAVR
  81:../../../os/common/ports/AVR/chcore.h **** 
  82:../../../os/common/ports/AVR/chcore.h **** /**
  83:../../../os/common/ports/AVR/chcore.h ****  * @brief   Name of the implemented architecture.
  84:../../../os/common/ports/AVR/chcore.h ****  */
  85:../../../os/common/ports/AVR/chcore.h **** #define PORT_ARCHITECTURE_NAME          "AVR"
  86:../../../os/common/ports/AVR/chcore.h **** 
  87:../../../os/common/ports/AVR/chcore.h **** /**
  88:../../../os/common/ports/AVR/chcore.h ****  * @brief   Name of the architecture variant.
  89:../../../os/common/ports/AVR/chcore.h ****  */
  90:../../../os/common/ports/AVR/chcore.h **** #define PORT_CORE_VARIANT_NAME          "MegaAVR"
  91:../../../os/common/ports/AVR/chcore.h **** 
  92:../../../os/common/ports/AVR/chcore.h **** /**
  93:../../../os/common/ports/AVR/chcore.h ****  * @brief   Compiler name and version.
  94:../../../os/common/ports/AVR/chcore.h ****  */
  95:../../../os/common/ports/AVR/chcore.h **** #if defined(__GNUC__) || defined(__DOXYGEN__)
  96:../../../os/common/ports/AVR/chcore.h **** #define PORT_COMPILER_NAME              "GCC " __VERSION__
  97:../../../os/common/ports/AVR/chcore.h **** 
  98:../../../os/common/ports/AVR/chcore.h **** #else
  99:../../../os/common/ports/AVR/chcore.h **** #error "unsupported compiler"
 100:../../../os/common/ports/AVR/chcore.h **** #endif
 101:../../../os/common/ports/AVR/chcore.h **** 
 102:../../../os/common/ports/AVR/chcore.h **** /**
 103:../../../os/common/ports/AVR/chcore.h ****  * @brief   Port-specific information string.
 104:../../../os/common/ports/AVR/chcore.h ****  */
 105:../../../os/common/ports/AVR/chcore.h **** #define PORT_INFO                       "None"
 106:../../../os/common/ports/AVR/chcore.h **** /** @} */
 107:../../../os/common/ports/AVR/chcore.h **** 
 108:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 109:../../../os/common/ports/AVR/chcore.h **** /* Module pre-compile time settings.                                         */
 110:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 111:../../../os/common/ports/AVR/chcore.h **** 
 112:../../../os/common/ports/AVR/chcore.h **** /**
 113:../../../os/common/ports/AVR/chcore.h ****  * @brief   Stack size for the system idle thread.
 114:../../../os/common/ports/AVR/chcore.h ****  * @details This size depends on the idle thread implementation, usually
 115:../../../os/common/ports/AVR/chcore.h ****  *          the idle thread should take no more space than those reserved
 116:../../../os/common/ports/AVR/chcore.h ****  *          by @p PORT_INT_REQUIRED_STACK.
 117:../../../os/common/ports/AVR/chcore.h ****  */
 118:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_IDLE_THREAD_STACK_SIZE) || defined(__DOXYGEN__)
 119:../../../os/common/ports/AVR/chcore.h **** #define PORT_IDLE_THREAD_STACK_SIZE     8
 120:../../../os/common/ports/AVR/chcore.h **** #endif
 121:../../../os/common/ports/AVR/chcore.h **** 
 122:../../../os/common/ports/AVR/chcore.h **** /**
 123:../../../os/common/ports/AVR/chcore.h ****  * @brief   Per-thread stack overhead for interrupts servicing.
 124:../../../os/common/ports/AVR/chcore.h ****  * @details This constant is used in the calculation of the correct working
 125:../../../os/common/ports/AVR/chcore.h ****  *          area size.
 126:../../../os/common/ports/AVR/chcore.h ****  */
 127:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_INT_REQUIRED_STACK) || defined(__DOXYGEN__)
 128:../../../os/common/ports/AVR/chcore.h **** #define PORT_INT_REQUIRED_STACK         32
 129:../../../os/common/ports/AVR/chcore.h **** #endif
 130:../../../os/common/ports/AVR/chcore.h **** 
 131:../../../os/common/ports/AVR/chcore.h **** /**
 132:../../../os/common/ports/AVR/chcore.h ****  * @brief   Enables a "wait for interrupt" instruction in the idle loop.
 133:../../../os/common/ports/AVR/chcore.h ****  */
 134:../../../os/common/ports/AVR/chcore.h **** #if !defined(PORT_AVR_WFI_SLEEP_IDLE) || defined(__DOXYGEN__)
 135:../../../os/common/ports/AVR/chcore.h **** #define PORT_AVR_WFI_SLEEP_IDLE      FALSE
 136:../../../os/common/ports/AVR/chcore.h **** #endif
 137:../../../os/common/ports/AVR/chcore.h **** 
 138:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 139:../../../os/common/ports/AVR/chcore.h **** /* Derived constants and error checks.                                       */
 140:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 141:../../../os/common/ports/AVR/chcore.h **** 
 142:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 143:../../../os/common/ports/AVR/chcore.h **** /* Module data structures and types.                                         */
 144:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 145:../../../os/common/ports/AVR/chcore.h **** 
 146:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 147:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 148:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 149:../../../os/common/ports/AVR/chcore.h **** 
 150:../../../os/common/ports/AVR/chcore.h **** /**
 151:../../../os/common/ports/AVR/chcore.h ****  * @brief   Type of stack and memory alignment enforcement.
 152:../../../os/common/ports/AVR/chcore.h ****  * @note    In this architecture the stack alignment is enforced to 8 bits.
 153:../../../os/common/ports/AVR/chcore.h ****  */
 154:../../../os/common/ports/AVR/chcore.h **** typedef uint8_t stkalign_t;
 155:../../../os/common/ports/AVR/chcore.h **** 
 156:../../../os/common/ports/AVR/chcore.h **** /**
 157:../../../os/common/ports/AVR/chcore.h ****  * @brief   Interrupt saved context.
 158:../../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the stack frame saved during a
 159:../../../os/common/ports/AVR/chcore.h ****  *          preemption-capable interrupt handler.
 160:../../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 161:../../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 162:../../../os/common/ports/AVR/chcore.h ****  */
 163:../../../os/common/ports/AVR/chcore.h **** struct port_extctx {
 164:../../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 165:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r31;
 166:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r30;
 167:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r27;
 168:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r26;
 169:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r25;
 170:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r24;
 171:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r23;
 172:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r22;
 173:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r21;
 174:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r20;
 175:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r19;
 176:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r18;
 177:../../../os/common/ports/AVR/chcore.h ****   uint8_t       sr;
 178:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r1;
 179:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r0;
 180:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 181:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 182:../../../os/common/ports/AVR/chcore.h **** #endif
 183:../../../os/common/ports/AVR/chcore.h ****   uint16_t      pc;
 184:../../../os/common/ports/AVR/chcore.h **** };
 185:../../../os/common/ports/AVR/chcore.h **** 
 186:../../../os/common/ports/AVR/chcore.h **** /**
 187:../../../os/common/ports/AVR/chcore.h ****  * @brief   System saved context.
 188:../../../os/common/ports/AVR/chcore.h ****  * @details This structure represents the inner stack frame during a context
 189:../../../os/common/ports/AVR/chcore.h ****  *          switching.
 190:../../../os/common/ports/AVR/chcore.h ****  * @note    R2 and R13 are not saved because those are assumed to be immutable
 191:../../../os/common/ports/AVR/chcore.h ****  *          during the system life cycle.
 192:../../../os/common/ports/AVR/chcore.h ****  * @note    LR is stored in the caller context so it is not present in this
 193:../../../os/common/ports/AVR/chcore.h ****  *          structure.
 194:../../../os/common/ports/AVR/chcore.h ****  */
 195:../../../os/common/ports/AVR/chcore.h **** struct port_intctx {
 196:../../../os/common/ports/AVR/chcore.h ****   uint8_t       _next;
 197:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r29;
 198:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r28;
 199:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r17;
 200:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r16;
 201:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r15;
 202:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r14;
 203:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r13;
 204:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r12;
 205:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r11;
 206:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r10;
 207:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r9;
 208:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r8;
 209:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r7;
 210:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r6;
 211:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r5;
 212:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r4;
 213:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r3;
 214:../../../os/common/ports/AVR/chcore.h ****   uint8_t       r2;
 215:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__)
 216:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcx;
 217:../../../os/common/ports/AVR/chcore.h **** #endif
 218:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pcl;
 219:../../../os/common/ports/AVR/chcore.h ****   uint8_t       pch;
 220:../../../os/common/ports/AVR/chcore.h **** };
 221:../../../os/common/ports/AVR/chcore.h **** 
 222:../../../os/common/ports/AVR/chcore.h **** /**
 223:../../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p thread_t structure.
 224:../../../os/common/ports/AVR/chcore.h ****  * @details This structure usually contains just the saved stack pointer
 225:../../../os/common/ports/AVR/chcore.h ****  *          defined as a pointer to a @p port_intctx structure.
 226:../../../os/common/ports/AVR/chcore.h ****  */
 227:../../../os/common/ports/AVR/chcore.h **** struct port_context {
 228:../../../os/common/ports/AVR/chcore.h ****   struct port_intctx *sp;
 229:../../../os/common/ports/AVR/chcore.h **** };
 230:../../../os/common/ports/AVR/chcore.h **** 
 231:../../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 232:../../../os/common/ports/AVR/chcore.h **** 
 233:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 234:../../../os/common/ports/AVR/chcore.h **** /* Module macros.                                                            */
 235:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 236:../../../os/common/ports/AVR/chcore.h **** 
 237:../../../os/common/ports/AVR/chcore.h **** /**
 238:../../../os/common/ports/AVR/chcore.h ****  * @brief   Platform dependent part of the @p chThdCreateI() API.
 239:../../../os/common/ports/AVR/chcore.h ****  * @details This code usually setup the context switching frame represented
 240:../../../os/common/ports/AVR/chcore.h ****  *          by an @p port_intctx structure.
 241:../../../os/common/ports/AVR/chcore.h ****  */
 242:../../../os/common/ports/AVR/chcore.h **** #if defined(__AVR_3_BYTE_PC__) || defined(__DOXYGEN__)
 243:../../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 244:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 245:../../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 246:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 247:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 248:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 249:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 250:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcx = (uint8_t)0;                                             \
 251:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 252:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 253:../../../os/common/ports/AVR/chcore.h **** }
 254:../../../os/common/ports/AVR/chcore.h **** #else /* !__AVR_3_BYTE_PC__ */
 255:../../../os/common/ports/AVR/chcore.h **** #define PORT_SETUP_CONTEXT(tp, wbase, wtop, pf, arg) {                      \
 256:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp = (struct port_intctx *)((uint8_t *)(wtop) -                   \
 257:../../../os/common/ports/AVR/chcore.h ****                                       sizeof(struct port_intctx));          \
 258:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r2  = (uint8_t)(0xff & (uint16_t)pf);                         \
 259:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r3  = (uint8_t)((uint16_t)(pf) >> 8);                         \
 260:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r4  = (uint8_t)(0xff & (uint16_t)arg);                        \
 261:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->r5  = (uint8_t)((uint16_t)(arg) >> 8);                        \
 262:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pcl = (uint16_t)_port_thread_start >> 8;                      \
 263:../../../os/common/ports/AVR/chcore.h ****   tp->ctx.sp->pch = (uint8_t)(0xff & (uint16_t)_port_thread_start);         \
 264:../../../os/common/ports/AVR/chcore.h **** }
 265:../../../os/common/ports/AVR/chcore.h **** #endif /* !__AVR_3_BYTE_PC__ */
 266:../../../os/common/ports/AVR/chcore.h **** 
 267:../../../os/common/ports/AVR/chcore.h **** /**
 268:../../../os/common/ports/AVR/chcore.h ****  * @brief   Computes the thread working area global size.
 269:../../../os/common/ports/AVR/chcore.h ****  * @note    There is no need to perform alignments in this macro.
 270:../../../os/common/ports/AVR/chcore.h ****  */
 271:../../../os/common/ports/AVR/chcore.h **** #define PORT_WA_SIZE(n) ((sizeof(struct port_intctx) - 1) +                \
 272:../../../os/common/ports/AVR/chcore.h ****                          (sizeof(struct port_extctx) - 1) +                \
 273:../../../os/common/ports/AVR/chcore.h ****                          ((size_t)(n)) + ((size_t)(PORT_INT_REQUIRED_STACK)))
 274:../../../os/common/ports/AVR/chcore.h **** 
 275:../../../os/common/ports/AVR/chcore.h **** /**
 276:../../../os/common/ports/AVR/chcore.h ****  * @brief   Static working area allocation.
 277:../../../os/common/ports/AVR/chcore.h ****  * @details This macro is used to allocate a static thread working area
 278:../../../os/common/ports/AVR/chcore.h ****  *          aligned as both position and size.
 279:../../../os/common/ports/AVR/chcore.h ****  *
 280:../../../os/common/ports/AVR/chcore.h ****  * @param[in] s         the name to be assigned to the stack array
 281:../../../os/common/ports/AVR/chcore.h ****  * @param[in] n         the stack size to be assigned to the thread
 282:../../../os/common/ports/AVR/chcore.h ****  */
 283:../../../os/common/ports/AVR/chcore.h **** #define PORT_WORKING_AREA(s, n)                                             \
 284:../../../os/common/ports/AVR/chcore.h ****   stkalign_t s[THD_WORKING_AREA_SIZE(n) / sizeof (stkalign_t)]
 285:../../../os/common/ports/AVR/chcore.h **** 
 286:../../../os/common/ports/AVR/chcore.h **** /**
 287:../../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 288:../../../os/common/ports/AVR/chcore.h ****  */
 289:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_PRIORITY(n) false
 290:../../../os/common/ports/AVR/chcore.h **** 
 291:../../../os/common/ports/AVR/chcore.h **** /**
 292:../../../os/common/ports/AVR/chcore.h ****  * @brief   Priority level verification macro.
 293:../../../os/common/ports/AVR/chcore.h ****  */
 294:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_IS_VALID_KERNEL_PRIORITY(n) false
 295:../../../os/common/ports/AVR/chcore.h **** 
 296:../../../os/common/ports/AVR/chcore.h **** /**
 297:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ prologue code.
 298:../../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the start of all IRQ handlers
 299:../../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 300:../../../os/common/ports/AVR/chcore.h ****  * @note    This code tricks the compiler to save all the specified registers
 301:../../../os/common/ports/AVR/chcore.h ****  *          by "touching" them.
 302:../../../os/common/ports/AVR/chcore.h ****  */
 303:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_PROLOGUE() {                                               \
 304:../../../os/common/ports/AVR/chcore.h ****   asm ("" : : : "r18", "r19", "r20", "r21", "r22", "r23", "r24",            \
 305:../../../os/common/ports/AVR/chcore.h ****                 "r25", "r26", "r27", "r30", "r31");                         \
 306:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 307:../../../os/common/ports/AVR/chcore.h **** }
 308:../../../os/common/ports/AVR/chcore.h **** 
 309:../../../os/common/ports/AVR/chcore.h **** /**
 310:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ epilogue code.
 311:../../../os/common/ports/AVR/chcore.h ****  * @details This macro must be inserted at the end of all IRQ handlers
 312:../../../os/common/ports/AVR/chcore.h ****  *          enabled to invoke system APIs.
 313:../../../os/common/ports/AVR/chcore.h ****  */
 314:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_EPILOGUE() {                                               \
 315:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = false;                                                     \
 316:../../../os/common/ports/AVR/chcore.h ****   __dbg_check_lock();                                                       \
 317:../../../os/common/ports/AVR/chcore.h ****   if (chSchIsPreemptionRequired())                                          \
 318:../../../os/common/ports/AVR/chcore.h ****     chSchDoPreemption();                                                    \
 319:../../../os/common/ports/AVR/chcore.h ****   __dbg_check_unlock();                                                     \
 320:../../../os/common/ports/AVR/chcore.h **** }
 321:../../../os/common/ports/AVR/chcore.h **** 
 322:../../../os/common/ports/AVR/chcore.h **** /**
 323:../../../os/common/ports/AVR/chcore.h ****  * @brief   IRQ handler function declaration.
 324:../../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 325:../../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 326:../../../os/common/ports/AVR/chcore.h ****  */
 327:../../../os/common/ports/AVR/chcore.h **** #define PORT_IRQ_HANDLER(id) ISR(id)
 328:../../../os/common/ports/AVR/chcore.h **** 
 329:../../../os/common/ports/AVR/chcore.h **** /**
 330:../../../os/common/ports/AVR/chcore.h ****  * @brief   Fast IRQ handler function declaration.
 331:../../../os/common/ports/AVR/chcore.h ****  * @note    @p id can be a function name or a vector number depending on the
 332:../../../os/common/ports/AVR/chcore.h ****  *          port implementation.
 333:../../../os/common/ports/AVR/chcore.h ****  */
 334:../../../os/common/ports/AVR/chcore.h **** #define PORT_FAST_IRQ_HANDLER(id) ISR(id)
 335:../../../os/common/ports/AVR/chcore.h **** 
 336:../../../os/common/ports/AVR/chcore.h **** /**
 337:../../../os/common/ports/AVR/chcore.h ****  * @brief   Performs a context switch between two threads.
 338:../../../os/common/ports/AVR/chcore.h ****  * @details This is the most critical code in any port, this function
 339:../../../os/common/ports/AVR/chcore.h ****  *          is responsible for the context switch between 2 threads.
 340:../../../os/common/ports/AVR/chcore.h ****  * @note    The implementation of this code affects <b>directly</b> the context
 341:../../../os/common/ports/AVR/chcore.h ****  *          switch performance so optimize here as much as you can.
 342:../../../os/common/ports/AVR/chcore.h ****  *
 343:../../../os/common/ports/AVR/chcore.h ****  * @param[in] ntp       the thread to be switched in
 344:../../../os/common/ports/AVR/chcore.h ****  * @param[in] otp       the thread to be switched out
 345:../../../os/common/ports/AVR/chcore.h ****  */
 346:../../../os/common/ports/AVR/chcore.h **** #define port_switch(ntp, otp) {                                             \
 347:../../../os/common/ports/AVR/chcore.h ****   _port_switch(ntp, otp);                                                   \
 348:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("" : : : "memory");                                         \
 349:../../../os/common/ports/AVR/chcore.h **** }
 350:../../../os/common/ports/AVR/chcore.h **** 
 351:../../../os/common/ports/AVR/chcore.h **** 
 352:../../../os/common/ports/AVR/chcore.h **** /**
 353:../../../os/common/ports/AVR/chcore.h ****  * @brief   Port-related initialization code.
 354:../../../os/common/ports/AVR/chcore.h ****  * @note    This function is empty in this port.
 355:../../../os/common/ports/AVR/chcore.h ****  */
 356:../../../os/common/ports/AVR/chcore.h **** #define port_init(oip) {                                                    \
 357:../../../os/common/ports/AVR/chcore.h ****   __avr_in_isr = true;                                                      \
 358:../../../os/common/ports/AVR/chcore.h **** }
 359:../../../os/common/ports/AVR/chcore.h **** 
 360:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 361:../../../os/common/ports/AVR/chcore.h **** /* External declarations.                                                    */
 362:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 363:../../../os/common/ports/AVR/chcore.h **** 
 364:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 365:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 366:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 367:../../../os/common/ports/AVR/chcore.h **** 
 368:../../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 369:../../../os/common/ports/AVR/chcore.h **** extern "C" {
 370:../../../os/common/ports/AVR/chcore.h **** #endif
 371:../../../os/common/ports/AVR/chcore.h ****   void _port_switch(thread_t *ntp, thread_t *otp);
 372:../../../os/common/ports/AVR/chcore.h ****   void _port_thread_start(void);
 373:../../../os/common/ports/AVR/chcore.h **** #ifdef __cplusplus
 374:../../../os/common/ports/AVR/chcore.h **** }
 375:../../../os/common/ports/AVR/chcore.h **** #endif
 376:../../../os/common/ports/AVR/chcore.h **** 
 377:../../../os/common/ports/AVR/chcore.h **** #endif /* !defined(_FROM_ASM_) */
 378:../../../os/common/ports/AVR/chcore.h **** 
 379:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 380:../../../os/common/ports/AVR/chcore.h **** /* Module inline functions.                                                  */
 381:../../../os/common/ports/AVR/chcore.h **** /*===========================================================================*/
 382:../../../os/common/ports/AVR/chcore.h **** 
 383:../../../os/common/ports/AVR/chcore.h **** /* The following code is not processed when the file is included from an
 384:../../../os/common/ports/AVR/chcore.h ****    asm module.*/
 385:../../../os/common/ports/AVR/chcore.h **** #if !defined(_FROM_ASM_)
 386:../../../os/common/ports/AVR/chcore.h **** 
 387:../../../os/common/ports/AVR/chcore.h **** /**
 388:../../../os/common/ports/AVR/chcore.h ****  * @brief   Returns a word encoding the current interrupts status.
 389:../../../os/common/ports/AVR/chcore.h ****  *
 390:../../../os/common/ports/AVR/chcore.h ****  * @return              The interrupts status.
 391:../../../os/common/ports/AVR/chcore.h ****  */
 392:../../../os/common/ports/AVR/chcore.h **** static inline syssts_t port_get_irq_status(void) {
 393:../../../os/common/ports/AVR/chcore.h **** 
 394:../../../os/common/ports/AVR/chcore.h ****   return SREG;
 395:../../../os/common/ports/AVR/chcore.h **** }
 396:../../../os/common/ports/AVR/chcore.h **** 
 397:../../../os/common/ports/AVR/chcore.h **** /**
 398:../../../os/common/ports/AVR/chcore.h ****  * @brief   Checks the interrupt status.
 399:../../../os/common/ports/AVR/chcore.h ****  *
 400:../../../os/common/ports/AVR/chcore.h ****  * @param[in] sts       the interrupt status word
 401:../../../os/common/ports/AVR/chcore.h ****  *
 402:../../../os/common/ports/AVR/chcore.h ****  * @return              The interrupt status.
 403:../../../os/common/ports/AVR/chcore.h ****  * @retval false        the word specified a disabled interrupts status.
 404:../../../os/common/ports/AVR/chcore.h ****  * @retval true         the word specified an enabled interrupts status.
 405:../../../os/common/ports/AVR/chcore.h ****  */
 406:../../../os/common/ports/AVR/chcore.h **** static inline bool port_irq_enabled(syssts_t sts) {
 407:../../../os/common/ports/AVR/chcore.h **** 
 408:../../../os/common/ports/AVR/chcore.h ****   return (bool)((sts & 0x80) != 0);
 409:../../../os/common/ports/AVR/chcore.h **** }
 410:../../../os/common/ports/AVR/chcore.h **** 
 411:../../../os/common/ports/AVR/chcore.h **** /**
 412:../../../os/common/ports/AVR/chcore.h ****  * @brief   Determines the current execution context.
 413:../../../os/common/ports/AVR/chcore.h ****  *
 414:../../../os/common/ports/AVR/chcore.h ****  * @return              The execution context.
 415:../../../os/common/ports/AVR/chcore.h ****  * @retval false        not running in ISR mode.
 416:../../../os/common/ports/AVR/chcore.h ****  * @retval true         running in ISR mode.
 417:../../../os/common/ports/AVR/chcore.h ****  */
 418:../../../os/common/ports/AVR/chcore.h **** static inline bool port_is_isr_context(void) {
 419:../../../os/common/ports/AVR/chcore.h **** 
 420:../../../os/common/ports/AVR/chcore.h ****   return __avr_in_isr;
 421:../../../os/common/ports/AVR/chcore.h **** }
 422:../../../os/common/ports/AVR/chcore.h **** 
 423:../../../os/common/ports/AVR/chcore.h **** /**
 424:../../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-lock action.
 425:../../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just disables interrupts but may perform more
 426:../../../os/common/ports/AVR/chcore.h ****  *          actions.
 427:../../../os/common/ports/AVR/chcore.h ****  */
 428:../../../os/common/ports/AVR/chcore.h **** static inline void port_lock(void) {
 429:../../../os/common/ports/AVR/chcore.h **** 
 430:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("cli" : : : "memory");
 137               		.loc 2 430 0
 138               	/* #APP */
 139               	 ;  430 "../../../os/common/ports/AVR/chcore.h" 1
 140 002a F894      		cli
 141               	 ;  0 "" 2
 142               	/* #NOAPP */
 143               	.LBE52:
 144               	.LBE51:
 145               	.LBE50:
 246:../../../os/oslib/src/chpipes.c **** 
 247:../../../os/oslib/src/chpipes.c ****   chSysLock();
 248:../../../os/oslib/src/chpipes.c ****   chThdResumeI(&pp->wtr, MSG_RESET);
 146               		.loc 1 248 0
 147 002c 6EEF      		ldi r22,lo8(-2)
 148 002e 7FEF      		ldi r23,lo8(-1)
 149 0030 CE01      		movw r24,r28
 150 0032 0B96      		adiw r24,11
 151 0034 0E94 0000 		call chThdResumeI
 152               	.LVL10:
 249:../../../os/oslib/src/chpipes.c ****   chThdResumeI(&pp->rtr, MSG_RESET);
 153               		.loc 1 249 0
 154 0038 6EEF      		ldi r22,lo8(-2)
 155 003a 7FEF      		ldi r23,lo8(-1)
 156 003c CE01      		movw r24,r28
 157 003e 0D96      		adiw r24,13
 158 0040 0E94 0000 		call chThdResumeI
 159               	.LVL11:
 250:../../../os/oslib/src/chpipes.c ****   chSchRescheduleS();
 160               		.loc 1 250 0
 161 0044 0E94 0000 		call chSchRescheduleS
 162               	.LVL12:
 163               	.LBB53:
 164               	.LBB54:
 165               	.LBB55:
 166               	.LBB56:
 431:../../../os/common/ports/AVR/chcore.h **** }
 432:../../../os/common/ports/AVR/chcore.h **** 
 433:../../../os/common/ports/AVR/chcore.h **** /**
 434:../../../os/common/ports/AVR/chcore.h ****  * @brief   Kernel-unlock action.
 435:../../../os/common/ports/AVR/chcore.h ****  * @details Usually this function just enables interrupts but may perform more
 436:../../../os/common/ports/AVR/chcore.h ****  *          actions.
 437:../../../os/common/ports/AVR/chcore.h ****  */
 438:../../../os/common/ports/AVR/chcore.h **** static inline void port_unlock(void) {
 439:../../../os/common/ports/AVR/chcore.h **** 
 440:../../../os/common/ports/AVR/chcore.h ****   asm volatile ("sei" : : : "memory");
 167               		.loc 2 440 0
 168               	/* #APP */
 169               	 ;  440 "../../../os/common/ports/AVR/chcore.h" 1
 170 0048 7894      		sei
 171               	 ;  0 "" 2
 172               	/* #NOAPP */
 173               	.LBE56:
 174               	.LBE55:
 175               	.LBE54:
 176               	.LBE53:
 251:../../../os/oslib/src/chpipes.c ****   chSysUnlock();
 252:../../../os/oslib/src/chpipes.c **** 
 253:../../../os/oslib/src/chpipes.c ****   PC_UNLOCK(pp);
 177               		.loc 1 253 0
 178 004a C801      		movw r24,r16
 179               	/* epilogue start */
 254:../../../os/oslib/src/chpipes.c **** }
 180               		.loc 1 254 0
 181 004c DF91      		pop r29
 182 004e CF91      		pop r28
 183               	.LVL13:
 184 0050 1F91      		pop r17
 185 0052 0F91      		pop r16
 186               	.LVL14:
 253:../../../os/oslib/src/chpipes.c **** }
 187               		.loc 1 253 0
 188 0054 0C94 0000 		jmp chMtxUnlock
 189               	.LVL15:
 190               		.cfi_endproc
 191               	.LFE196:
 193               		.section	.text.chPipeWriteTimeout,"ax",@progbits
 194               	.global	chPipeWriteTimeout
 196               	chPipeWriteTimeout:
 197               	.LFB197:
 255:../../../os/oslib/src/chpipes.c **** 
 256:../../../os/oslib/src/chpipes.c **** /**
 257:../../../os/oslib/src/chpipes.c ****  * @brief   Pipe write with timeout.
 258:../../../os/oslib/src/chpipes.c ****  * @details The function writes data from a buffer to a pipe. The
 259:../../../os/oslib/src/chpipes.c ****  *          operation completes when the specified amount of data has been
 260:../../../os/oslib/src/chpipes.c ****  *          transferred or after the specified timeout or if the pipe has
 261:../../../os/oslib/src/chpipes.c ****  *          been reset.
 262:../../../os/oslib/src/chpipes.c ****  *
 263:../../../os/oslib/src/chpipes.c ****  * @param[in] pp        pointer to an initialized @p pipe_t object
 264:../../../os/oslib/src/chpipes.c ****  * @param[in] bp        pointer to the data buffer
 265:../../../os/oslib/src/chpipes.c ****  * @param[in] n         number of bytes to be written, the value 0 is
 266:../../../os/oslib/src/chpipes.c ****  *                      reserved
 267:../../../os/oslib/src/chpipes.c ****  * @param[in] timeout   number of ticks before the operation timeouts,
 268:../../../os/oslib/src/chpipes.c ****  *                      the following special values are allowed:
 269:../../../os/oslib/src/chpipes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 270:../../../os/oslib/src/chpipes.c ****  *                      - @a TIME_INFINITE no timeout.
 271:../../../os/oslib/src/chpipes.c ****  * @return              The number of bytes effectively transferred. A number
 272:../../../os/oslib/src/chpipes.c ****  *                      lower than @p n means that a timeout occurred or the
 273:../../../os/oslib/src/chpipes.c ****  *                      pipe went in reset state.
 274:../../../os/oslib/src/chpipes.c ****  *
 275:../../../os/oslib/src/chpipes.c ****  * @api
 276:../../../os/oslib/src/chpipes.c ****  */
 277:../../../os/oslib/src/chpipes.c **** size_t chPipeWriteTimeout(pipe_t *pp, const uint8_t *bp,
 278:../../../os/oslib/src/chpipes.c ****                           size_t n, sysinterval_t timeout) {
 198               		.loc 1 278 0
 199               		.cfi_startproc
 200               	.LVL16:
 201 0000 2F92      		push r2
 202               	.LCFI6:
 203               		.cfi_def_cfa_offset 3
 204               		.cfi_offset 2, -2
 205 0002 3F92      		push r3
 206               	.LCFI7:
 207               		.cfi_def_cfa_offset 4
 208               		.cfi_offset 3, -3
 209 0004 4F92      		push r4
 210               	.LCFI8:
 211               		.cfi_def_cfa_offset 5
 212               		.cfi_offset 4, -4
 213 0006 5F92      		push r5
 214               	.LCFI9:
 215               		.cfi_def_cfa_offset 6
 216               		.cfi_offset 5, -5
 217 0008 6F92      		push r6
 218               	.LCFI10:
 219               		.cfi_def_cfa_offset 7
 220               		.cfi_offset 6, -6
 221 000a 7F92      		push r7
 222               	.LCFI11:
 223               		.cfi_def_cfa_offset 8
 224               		.cfi_offset 7, -7
 225 000c 8F92      		push r8
 226               	.LCFI12:
 227               		.cfi_def_cfa_offset 9
 228               		.cfi_offset 8, -8
 229 000e 9F92      		push r9
 230               	.LCFI13:
 231               		.cfi_def_cfa_offset 10
 232               		.cfi_offset 9, -9
 233 0010 AF92      		push r10
 234               	.LCFI14:
 235               		.cfi_def_cfa_offset 11
 236               		.cfi_offset 10, -10
 237 0012 BF92      		push r11
 238               	.LCFI15:
 239               		.cfi_def_cfa_offset 12
 240               		.cfi_offset 11, -11
 241 0014 CF92      		push r12
 242               	.LCFI16:
 243               		.cfi_def_cfa_offset 13
 244               		.cfi_offset 12, -12
 245 0016 DF92      		push r13
 246               	.LCFI17:
 247               		.cfi_def_cfa_offset 14
 248               		.cfi_offset 13, -13
 249 0018 EF92      		push r14
 250               	.LCFI18:
 251               		.cfi_def_cfa_offset 15
 252               		.cfi_offset 14, -14
 253 001a FF92      		push r15
 254               	.LCFI19:
 255               		.cfi_def_cfa_offset 16
 256               		.cfi_offset 15, -15
 257 001c 0F93      		push r16
 258               	.LCFI20:
 259               		.cfi_def_cfa_offset 17
 260               		.cfi_offset 16, -16
 261 001e 1F93      		push r17
 262               	.LCFI21:
 263               		.cfi_def_cfa_offset 18
 264               		.cfi_offset 17, -17
 265 0020 CF93      		push r28
 266               	.LCFI22:
 267               		.cfi_def_cfa_offset 19
 268               		.cfi_offset 28, -18
 269 0022 DF93      		push r29
 270               	.LCFI23:
 271               		.cfi_def_cfa_offset 20
 272               		.cfi_offset 29, -19
 273 0024 CDB7      		in r28,__SP_L__
 274 0026 DEB7      		in r29,__SP_H__
 275               	.LCFI24:
 276               		.cfi_def_cfa_register 28
 277 0028 2897      		sbiw r28,8
 278               	.LCFI25:
 279               		.cfi_def_cfa_offset 28
 280 002a 0FB6      		in __tmp_reg__,__SREG__
 281 002c F894      		cli
 282 002e DEBF      		out __SP_H__,r29
 283 0030 0FBE      		out __SREG__,__tmp_reg__
 284 0032 CDBF      		out __SP_L__,r28
 285               	/* prologue: function */
 286               	/* frame size = 8 */
 287               	/* stack size = 26 */
 288               	.L__stack_usage = 26
 289 0034 8C01      		movw r16,r24
 290 0036 4B01      		movw r8,r22
 291 0038 5C83      		std Y+4,r21
 292 003a 4B83      		std Y+3,r20
 293 003c 2901      		movw r4,r18
 294               	.LVL17:
 279:../../../os/oslib/src/chpipes.c ****   size_t max = n;
 280:../../../os/oslib/src/chpipes.c **** 
 281:../../../os/oslib/src/chpipes.c ****   chDbgCheck(n > 0U);
 282:../../../os/oslib/src/chpipes.c **** 
 283:../../../os/oslib/src/chpipes.c ****   /* If the pipe is in reset state then returns immediately.*/
 284:../../../os/oslib/src/chpipes.c ****   if (pp->reset) {
 295               		.loc 1 284 0
 296 003e FC01      		movw r30,r24
 297 0040 8285      		ldd r24,Z+10
 298               	.LVL18:
 299 0042 8823      		tst r24
 300 0044 01F0      		breq .L18
 285:../../../os/oslib/src/chpipes.c ****     return (size_t)0;
 301               		.loc 1 285 0
 302 0046 80E0      		ldi r24,0
 303 0048 90E0      		ldi r25,0
 304               	.LVL19:
 305               	.L4:
 306               	/* epilogue start */
 286:../../../os/oslib/src/chpipes.c ****   }
 287:../../../os/oslib/src/chpipes.c **** 
 288:../../../os/oslib/src/chpipes.c ****   PW_LOCK(pp);
 289:../../../os/oslib/src/chpipes.c **** 
 290:../../../os/oslib/src/chpipes.c ****   while (n > 0U) {
 291:../../../os/oslib/src/chpipes.c ****     size_t done;
 292:../../../os/oslib/src/chpipes.c **** 
 293:../../../os/oslib/src/chpipes.c ****     done = pipe_write(pp, bp, n);
 294:../../../os/oslib/src/chpipes.c ****     if (done == (size_t)0) {
 295:../../../os/oslib/src/chpipes.c ****       msg_t msg;
 296:../../../os/oslib/src/chpipes.c **** 
 297:../../../os/oslib/src/chpipes.c ****       chSysLock();
 298:../../../os/oslib/src/chpipes.c ****       msg = chThdSuspendTimeoutS(&pp->wtr, timeout);
 299:../../../os/oslib/src/chpipes.c ****       chSysUnlock();
 300:../../../os/oslib/src/chpipes.c **** 
 301:../../../os/oslib/src/chpipes.c ****       /* Anything except MSG_OK causes the operation to stop.*/
 302:../../../os/oslib/src/chpipes.c ****       if (msg != MSG_OK) {
 303:../../../os/oslib/src/chpipes.c ****         break;
 304:../../../os/oslib/src/chpipes.c ****       }
 305:../../../os/oslib/src/chpipes.c ****     }
 306:../../../os/oslib/src/chpipes.c ****     else {
 307:../../../os/oslib/src/chpipes.c ****       n  -= done;
 308:../../../os/oslib/src/chpipes.c ****       bp += done;
 309:../../../os/oslib/src/chpipes.c **** 
 310:../../../os/oslib/src/chpipes.c ****       /* Resuming the reader, if present.*/
 311:../../../os/oslib/src/chpipes.c ****       chThdResume(&pp->rtr, MSG_OK);
 312:../../../os/oslib/src/chpipes.c ****     }
 313:../../../os/oslib/src/chpipes.c ****   }
 314:../../../os/oslib/src/chpipes.c **** 
 315:../../../os/oslib/src/chpipes.c ****   PW_UNLOCK(pp);
 316:../../../os/oslib/src/chpipes.c **** 
 317:../../../os/oslib/src/chpipes.c ****   return max - n;
 318:../../../os/oslib/src/chpipes.c **** }
 307               		.loc 1 318 0
 308 004a 2896      		adiw r28,8
 309 004c 0FB6      		in __tmp_reg__,__SREG__
 310 004e F894      		cli
 311 0050 DEBF      		out __SP_H__,r29
 312 0052 0FBE      		out __SREG__,__tmp_reg__
 313 0054 CDBF      		out __SP_L__,r28
 314 0056 DF91      		pop r29
 315 0058 CF91      		pop r28
 316 005a 1F91      		pop r17
 317 005c 0F91      		pop r16
 318               	.LVL20:
 319 005e FF90      		pop r15
 320 0060 EF90      		pop r14
 321 0062 DF90      		pop r13
 322 0064 CF90      		pop r12
 323 0066 BF90      		pop r11
 324 0068 AF90      		pop r10
 325 006a 9F90      		pop r9
 326 006c 8F90      		pop r8
 327               	.LVL21:
 328 006e 7F90      		pop r7
 329 0070 6F90      		pop r6
 330 0072 5F90      		pop r5
 331 0074 4F90      		pop r4
 332               	.LVL22:
 333 0076 3F90      		pop r3
 334 0078 2F90      		pop r2
 335 007a 0895      		ret
 336               	.LVL23:
 337               	.L18:
 288:../../../os/oslib/src/chpipes.c **** 
 338               		.loc 1 288 0
 339 007c 9801      		movw r18,r16
 340 007e 295E      		subi r18,-23
 341 0080 3F4F      		sbci r19,-1
 342 0082 3E83      		std Y+6,r19
 343 0084 2D83      		std Y+5,r18
 344 0086 C901      		movw r24,r18
 345 0088 0E94 0000 		call chMtxLock
 346               	.LVL24:
 290:../../../os/oslib/src/chpipes.c ****     size_t done;
 347               		.loc 1 290 0
 348 008c 4B81      		ldd r20,Y+3
 349 008e 5C81      		ldd r21,Y+4
 350 0090 452B      		or r20,r21
 351 0092 01F4      		brne .+2
 352 0094 00C0      		rjmp .L15
 353 0096 5801      		movw r10,r16
 354 0098 5FE0      		ldi r21,15
 355 009a A50E      		add r10,r21
 356 009c B11C      		adc r11,__zero_reg__
 357 009e CB80      		ldd r12,Y+3
 358 00a0 DC80      		ldd r13,Y+4
 359               	.LBB72:
 311:../../../os/oslib/src/chpipes.c ****     }
 360               		.loc 1 311 0
 361 00a2 1801      		movw r2,r16
 362 00a4 8DE0      		ldi r24,13
 363 00a6 280E      		add r2,r24
 364 00a8 311C      		adc r3,__zero_reg__
 365               	.LBB73:
 298:../../../os/oslib/src/chpipes.c ****       chSysUnlock();
 366               		.loc 1 298 0
 367 00aa F801      		movw r30,r16
 368 00ac 3B96      		adiw r30,11
 369 00ae FA83      		std Y+2,r31
 370 00b0 E983      		std Y+1,r30
 371               	.LVL25:
 372               	.L7:
 373               	.LBE73:
 374               	.LBB81:
 375               	.LBB82:
 108:../../../os/oslib/src/chpipes.c **** 
 376               		.loc 1 108 0
 377 00b2 C501      		movw r24,r10
 378 00b4 0E94 0000 		call chMtxLock
 379               	.LVL26:
 380               	.LBB83:
 381               	.LBB84:
 382               	.LBB85:
 383               	.LBB86:
 384               		.file 3 "../../../os/oslib/include/chpipes.h"
   1:../../../os/oslib/include/chpipes.h **** /*
   2:../../../os/oslib/include/chpipes.h ****     ChibiOS - Copyright (C) 2006,2007,2008,2009,2010,2011,2012,2013,2014,
   3:../../../os/oslib/include/chpipes.h ****               2015,2016,2017,2018,2019,2020,2021 Giovanni Di Sirio.
   4:../../../os/oslib/include/chpipes.h **** 
   5:../../../os/oslib/include/chpipes.h ****     This file is part of ChibiOS.
   6:../../../os/oslib/include/chpipes.h **** 
   7:../../../os/oslib/include/chpipes.h ****     ChibiOS is free software; you can redistribute it and/or modify
   8:../../../os/oslib/include/chpipes.h ****     it under the terms of the GNU General Public License as published by
   9:../../../os/oslib/include/chpipes.h ****     the Free Software Foundation version 3 of the License.
  10:../../../os/oslib/include/chpipes.h **** 
  11:../../../os/oslib/include/chpipes.h ****     ChibiOS is distributed in the hope that it will be useful,
  12:../../../os/oslib/include/chpipes.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../../../os/oslib/include/chpipes.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../../../os/oslib/include/chpipes.h ****     GNU General Public License for more details.
  15:../../../os/oslib/include/chpipes.h **** 
  16:../../../os/oslib/include/chpipes.h ****     You should have received a copy of the GNU General Public License
  17:../../../os/oslib/include/chpipes.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  18:../../../os/oslib/include/chpipes.h **** */
  19:../../../os/oslib/include/chpipes.h **** 
  20:../../../os/oslib/include/chpipes.h **** /**
  21:../../../os/oslib/include/chpipes.h ****  * @file    oslib/include/chpipes.h
  22:../../../os/oslib/include/chpipes.h ****  * @brief   Pipes macros and structures.
  23:../../../os/oslib/include/chpipes.h ****  *
  24:../../../os/oslib/include/chpipes.h ****  * @addtogroup oslib_pipes
  25:../../../os/oslib/include/chpipes.h ****  * @{
  26:../../../os/oslib/include/chpipes.h ****  */
  27:../../../os/oslib/include/chpipes.h **** 
  28:../../../os/oslib/include/chpipes.h **** #ifndef CHPIPES_H
  29:../../../os/oslib/include/chpipes.h **** #define CHPIPES_H
  30:../../../os/oslib/include/chpipes.h **** 
  31:../../../os/oslib/include/chpipes.h **** #if (CH_CFG_USE_PIPES == TRUE) || defined(__DOXYGEN__)
  32:../../../os/oslib/include/chpipes.h **** 
  33:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
  34:../../../os/oslib/include/chpipes.h **** /* Module constants.                                                         */
  35:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
  36:../../../os/oslib/include/chpipes.h **** 
  37:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
  38:../../../os/oslib/include/chpipes.h **** /* Module pre-compile time settings.                                         */
  39:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
  40:../../../os/oslib/include/chpipes.h **** 
  41:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
  42:../../../os/oslib/include/chpipes.h **** /* Derived constants and error checks.                                       */
  43:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
  44:../../../os/oslib/include/chpipes.h **** 
  45:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
  46:../../../os/oslib/include/chpipes.h **** /* Module data structures and types.                                         */
  47:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
  48:../../../os/oslib/include/chpipes.h **** 
  49:../../../os/oslib/include/chpipes.h **** /**
  50:../../../os/oslib/include/chpipes.h ****  * @brief   Structure representing a pipe object.
  51:../../../os/oslib/include/chpipes.h ****  */
  52:../../../os/oslib/include/chpipes.h **** typedef struct {
  53:../../../os/oslib/include/chpipes.h ****   uint8_t               *buffer;        /**< @brief Pointer to the pipe
  54:../../../os/oslib/include/chpipes.h ****                                                     buffer.                 */
  55:../../../os/oslib/include/chpipes.h ****   uint8_t               *top;           /**< @brief Pointer to the location
  56:../../../os/oslib/include/chpipes.h ****                                                     after the buffer.       */
  57:../../../os/oslib/include/chpipes.h ****   uint8_t               *wrptr;         /**< @brief Write pointer.          */
  58:../../../os/oslib/include/chpipes.h ****   uint8_t               *rdptr;         /**< @brief Read pointer.           */
  59:../../../os/oslib/include/chpipes.h ****   size_t                cnt;            /**< @brief Bytes in the pipe.      */
  60:../../../os/oslib/include/chpipes.h ****   bool                  reset;          /**< @brief True if in reset state. */
  61:../../../os/oslib/include/chpipes.h ****   thread_reference_t    wtr;            /**< @brief Waiting writer.         */
  62:../../../os/oslib/include/chpipes.h ****   thread_reference_t    rtr;            /**< @brief Waiting reader.         */
  63:../../../os/oslib/include/chpipes.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
  64:../../../os/oslib/include/chpipes.h ****   mutex_t               cmtx;           /**< @brief Common access mutex.    */
  65:../../../os/oslib/include/chpipes.h ****   mutex_t               wmtx;           /**< @brief Write access mutex.     */
  66:../../../os/oslib/include/chpipes.h ****   mutex_t               rmtx;           /**< @brief Read access mutex.      */
  67:../../../os/oslib/include/chpipes.h **** #else
  68:../../../os/oslib/include/chpipes.h ****   semaphore_t           csem;           /**< @brief Common access semaphore.*/
  69:../../../os/oslib/include/chpipes.h ****   semaphore_t           wsem;           /**< @brief Write access semaphore. */
  70:../../../os/oslib/include/chpipes.h ****   semaphore_t           rsem;           /**< @brief Read access semaphore.  */
  71:../../../os/oslib/include/chpipes.h **** #endif
  72:../../../os/oslib/include/chpipes.h **** } pipe_t;
  73:../../../os/oslib/include/chpipes.h **** 
  74:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
  75:../../../os/oslib/include/chpipes.h **** /* Module macros.                                                            */
  76:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
  77:../../../os/oslib/include/chpipes.h **** 
  78:../../../os/oslib/include/chpipes.h **** /**
  79:../../../os/oslib/include/chpipes.h ****  * @brief   Data part of a static pipe initializer.
  80:../../../os/oslib/include/chpipes.h ****  * @details This macro should be used when statically initializing a
  81:../../../os/oslib/include/chpipes.h ****  *          pipe that is part of a bigger structure.
  82:../../../os/oslib/include/chpipes.h ****  *
  83:../../../os/oslib/include/chpipes.h ****  * @param[in] name      the name of the pipe variable
  84:../../../os/oslib/include/chpipes.h ****  * @param[in] buffer    pointer to the pipe buffer array of @p uint8_t
  85:../../../os/oslib/include/chpipes.h ****  * @param[in] size      number of @p uint8_t elements in the buffer array
  86:../../../os/oslib/include/chpipes.h ****  */
  87:../../../os/oslib/include/chpipes.h **** #if (CH_CFG_USE_MUTEXES == TRUE) || defined(__DOXYGEN__)
  88:../../../os/oslib/include/chpipes.h **** #define __PIPE_DATA(name, buffer, size) {                                   \
  89:../../../os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
  90:../../../os/oslib/include/chpipes.h ****   (uint8_t *)(buffer) + size,                                               \
  91:../../../os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
  92:../../../os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
  93:../../../os/oslib/include/chpipes.h ****   (size_t)0,                                                                \
  94:../../../os/oslib/include/chpipes.h ****   false,                                                                    \
  95:../../../os/oslib/include/chpipes.h ****   NULL,                                                                     \
  96:../../../os/oslib/include/chpipes.h ****   NULL,                                                                     \
  97:../../../os/oslib/include/chpipes.h ****   __MUTEX_DATA(name.cmtx),                                                  \
  98:../../../os/oslib/include/chpipes.h ****   __MUTEX_DATA(name.wmtx),                                                  \
  99:../../../os/oslib/include/chpipes.h ****   __MUTEX_DATA(name.rmtx),                                                  \
 100:../../../os/oslib/include/chpipes.h **** }
 101:../../../os/oslib/include/chpipes.h **** #else /* CH_CFG_USE_MUTEXES == FALSE */
 102:../../../os/oslib/include/chpipes.h **** #define __PIPE_DATA(name, buffer, size) {                                   \
 103:../../../os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
 104:../../../os/oslib/include/chpipes.h ****   (uint8_t *)(buffer) + size,                                               \
 105:../../../os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
 106:../../../os/oslib/include/chpipes.h ****   (uint8_t *)(buffer),                                                      \
 107:../../../os/oslib/include/chpipes.h ****   (size_t)0,                                                                \
 108:../../../os/oslib/include/chpipes.h ****   false,                                                                    \
 109:../../../os/oslib/include/chpipes.h ****   NULL,                                                                     \
 110:../../../os/oslib/include/chpipes.h ****   NULL,                                                                     \
 111:../../../os/oslib/include/chpipes.h ****   __SEMAPHORE_DATA(name.csem, (cnt_t)1),                                    \
 112:../../../os/oslib/include/chpipes.h ****   __SEMAPHORE_DATA(name.wsem, (cnt_t)1),                                    \
 113:../../../os/oslib/include/chpipes.h ****   __SEMAPHORE_DATA(name.rsem, (cnt_t)1),                                    \
 114:../../../os/oslib/include/chpipes.h **** }
 115:../../../os/oslib/include/chpipes.h **** #endif /* CH_CFG_USE_MUTEXES == FALSE */
 116:../../../os/oslib/include/chpipes.h **** 
 117:../../../os/oslib/include/chpipes.h **** /**
 118:../../../os/oslib/include/chpipes.h ****  * @brief   Static pipe initializer.
 119:../../../os/oslib/include/chpipes.h ****  * @details Statically initialized pipes require no explicit
 120:../../../os/oslib/include/chpipes.h ****  *          initialization using @p chPipeObjectInit().
 121:../../../os/oslib/include/chpipes.h ****  *
 122:../../../os/oslib/include/chpipes.h ****  * @param[in] name      the name of the pipe variable
 123:../../../os/oslib/include/chpipes.h ****  * @param[in] buffer    pointer to the pipe buffer array of @p uint8_t
 124:../../../os/oslib/include/chpipes.h ****  * @param[in] size      number of @p uint8_t elements in the buffer array
 125:../../../os/oslib/include/chpipes.h ****  */
 126:../../../os/oslib/include/chpipes.h **** #define PIPE_DECL(name, buffer, size)                                       \
 127:../../../os/oslib/include/chpipes.h ****   pipe_t name = __PIPE_DATA(name, buffer, size)
 128:../../../os/oslib/include/chpipes.h **** 
 129:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
 130:../../../os/oslib/include/chpipes.h **** /* External declarations.                                                    */
 131:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
 132:../../../os/oslib/include/chpipes.h **** 
 133:../../../os/oslib/include/chpipes.h **** #ifdef __cplusplus
 134:../../../os/oslib/include/chpipes.h **** extern "C" {
 135:../../../os/oslib/include/chpipes.h **** #endif
 136:../../../os/oslib/include/chpipes.h ****   void chPipeObjectInit(pipe_t *pp, uint8_t *buf, size_t n);
 137:../../../os/oslib/include/chpipes.h ****   void chPipeReset(pipe_t *pp);
 138:../../../os/oslib/include/chpipes.h ****   size_t chPipeWriteTimeout(pipe_t *pp, const uint8_t *bp,
 139:../../../os/oslib/include/chpipes.h ****                             size_t n, sysinterval_t timeout);
 140:../../../os/oslib/include/chpipes.h ****   size_t chPipeReadTimeout(pipe_t *pp, uint8_t *bp,
 141:../../../os/oslib/include/chpipes.h ****                            size_t n, sysinterval_t timeout);
 142:../../../os/oslib/include/chpipes.h **** #ifdef __cplusplus
 143:../../../os/oslib/include/chpipes.h **** }
 144:../../../os/oslib/include/chpipes.h **** #endif
 145:../../../os/oslib/include/chpipes.h **** 
 146:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
 147:../../../os/oslib/include/chpipes.h **** /* Module inline functions.                                                  */
 148:../../../os/oslib/include/chpipes.h **** /*===========================================================================*/
 149:../../../os/oslib/include/chpipes.h **** 
 150:../../../os/oslib/include/chpipes.h **** /**
 151:../../../os/oslib/include/chpipes.h ****  * @brief   Returns the pipe buffer size as number of bytes.
 152:../../../os/oslib/include/chpipes.h ****  *
 153:../../../os/oslib/include/chpipes.h ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
 154:../../../os/oslib/include/chpipes.h ****  * @return              The size of the pipe.
 155:../../../os/oslib/include/chpipes.h ****  *
 156:../../../os/oslib/include/chpipes.h ****  * @api
 157:../../../os/oslib/include/chpipes.h ****  */
 158:../../../os/oslib/include/chpipes.h **** static inline size_t chPipeGetSize(const pipe_t *pp) {
 159:../../../os/oslib/include/chpipes.h **** 
 160:../../../os/oslib/include/chpipes.h ****   /*lint -save -e9033 [10.8] Perfectly safe pointers
 161:../../../os/oslib/include/chpipes.h ****     arithmetic.*/
 162:../../../os/oslib/include/chpipes.h ****   return (size_t)(pp->top - pp->buffer);
 385               		.loc 3 162 0
 386 00b8 F801      		movw r30,r16
 387 00ba E280      		ldd r14,Z+2
 388 00bc F380      		ldd r15,Z+3
 389 00be 8085      		ldd r24,Z+8
 390 00c0 9185      		ldd r25,Z+9
 391               	.LVL27:
 392               	.LBE86:
 393               	.LBE85:
 163:../../../os/oslib/include/chpipes.h ****   /*lint -restore*/
 164:../../../os/oslib/include/chpipes.h **** }
 165:../../../os/oslib/include/chpipes.h **** 
 166:../../../os/oslib/include/chpipes.h **** /**
 167:../../../os/oslib/include/chpipes.h ****  * @brief   Returns the number of used byte slots into a pipe.
 168:../../../os/oslib/include/chpipes.h ****  *
 169:../../../os/oslib/include/chpipes.h ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
 170:../../../os/oslib/include/chpipes.h ****  * @return              The number of queued bytes.
 171:../../../os/oslib/include/chpipes.h ****  *
 172:../../../os/oslib/include/chpipes.h ****  * @api
 173:../../../os/oslib/include/chpipes.h ****  */
 174:../../../os/oslib/include/chpipes.h **** static inline size_t chPipeGetUsedCount(const pipe_t *pp) {
 175:../../../os/oslib/include/chpipes.h **** 
 176:../../../os/oslib/include/chpipes.h ****   return pp->cnt;
 177:../../../os/oslib/include/chpipes.h **** }
 178:../../../os/oslib/include/chpipes.h **** 
 179:../../../os/oslib/include/chpipes.h **** /**
 180:../../../os/oslib/include/chpipes.h ****  * @brief   Returns the number of free byte slots into a pipe.
 181:../../../os/oslib/include/chpipes.h ****  *
 182:../../../os/oslib/include/chpipes.h ****  * @param[in] pp        the pointer to an initialized @p pipe_t object
 183:../../../os/oslib/include/chpipes.h ****  * @return              The number of empty byte slots.
 184:../../../os/oslib/include/chpipes.h ****  *
 185:../../../os/oslib/include/chpipes.h ****  * @api
 186:../../../os/oslib/include/chpipes.h ****  */
 187:../../../os/oslib/include/chpipes.h **** static inline size_t chPipeGetFreeCount(const pipe_t *pp) {
 188:../../../os/oslib/include/chpipes.h **** 
 189:../../../os/oslib/include/chpipes.h ****   return chPipeGetSize(pp) - chPipeGetUsedCount(pp);
 394               		.loc 3 189 0
 395 00c2 2081      		ld r18,Z
 396 00c4 3181      		ldd r19,Z+1
 397 00c6 A701      		movw r20,r14
 398 00c8 421B      		sub r20,r18
 399 00ca 530B      		sbc r21,r19
 400               	.LVL28:
 401 00cc 481B      		sub r20,r24
 402 00ce 590B      		sbc r21,r25
 403 00d0 5887      		std Y+8,r21
 404 00d2 4F83      		std Y+7,r20
 405 00d4 C416      		cp r12,r20
 406 00d6 D506      		cpc r13,r21
 407 00d8 00F4      		brsh .L8
 408 00da D886      		std Y+8,r13
 409 00dc CF82      		std Y+7,r12
 410               	.L8:
 411               	.LVL29:
 412               	.LBE84:
 413               	.LBE83:
 114:../../../os/oslib/src/chpipes.c **** 
 414               		.loc 1 114 0
 415 00de EF81      		ldd r30,Y+7
 416 00e0 F885      		ldd r31,Y+8
 417 00e2 8E0F      		add r24,r30
 418 00e4 9F1F      		adc r25,r31
 419 00e6 F801      		movw r30,r16
 420 00e8 9187      		std Z+9,r25
 421 00ea 8087      		std Z+8,r24
 118:../../../os/oslib/src/chpipes.c ****   /*lint -restore*/
 422               		.loc 1 118 0
 423 00ec 8481      		ldd r24,Z+4
 424 00ee 9581      		ldd r25,Z+5
 425 00f0 E81A      		sub r14,r24
 426 00f2 F90A      		sbc r15,r25
 427               	.LVL30:
 121:../../../os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, n);
 428               		.loc 1 121 0
 429 00f4 2F81      		ldd r18,Y+7
 430 00f6 3885      		ldd r19,Y+8
 431 00f8 2E15      		cp r18,r14
 432 00fa 3F05      		cpc r19,r15
 433 00fc 00F4      		brsh .+2
 434 00fe 00C0      		rjmp .L19
 125:../../../os/oslib/src/chpipes.c ****     memcpy((void *)pp->wrptr, (const void *)bp, s1);
 435               		.loc 1 125 0
 436 0100 4F81      		ldd r20,Y+7
 437 0102 5885      		ldd r21,Y+8
 438 0104 E416      		cp r14,r20
 439 0106 F506      		cpc r15,r21
 440 0108 00F4      		brsh .+2
 441 010a 00C0      		rjmp .L20
 133:../../../os/oslib/src/chpipes.c ****     pp->wrptr = pp->buffer;
 442               		.loc 1 133 0
 443 010c 4F81      		ldd r20,Y+7
 444 010e 5885      		ldd r21,Y+8
 445 0110 B401      		movw r22,r8
 446 0112 0E94 0000 		call memcpy
 447               	.LVL31:
 134:../../../os/oslib/src/chpipes.c ****   }
 448               		.loc 1 134 0
 449 0116 F801      		movw r30,r16
 450 0118 8081      		ld r24,Z
 451 011a 9181      		ldd r25,Z+1
 452 011c 9583      		std Z+5,r25
 453 011e 8483      		std Z+4,r24
 454               	.LVL32:
 455               	.L10:
 137:../../../os/oslib/src/chpipes.c **** 
 456               		.loc 1 137 0
 457 0120 C501      		movw r24,r10
 458 0122 0E94 0000 		call chMtxUnlock
 459               	.LVL33:
 460               	.LBE82:
 461               	.LBE81:
 294:../../../os/oslib/src/chpipes.c ****       msg_t msg;
 462               		.loc 1 294 0
 463 0126 2F81      		ldd r18,Y+7
 464 0128 3885      		ldd r19,Y+8
 465 012a 232B      		or r18,r19
 466 012c 01F4      		brne .L12
 467               	.LBB88:
 468               	.LBB74:
 469               	.LBB75:
 470               	.LBB76:
 430:../../../os/common/ports/AVR/chcore.h **** }
 471               		.loc 2 430 0
 472               	/* #APP */
 473               	 ;  430 "../../../os/common/ports/AVR/chcore.h" 1
 474 012e F894      		cli
 475               	 ;  0 "" 2
 476               	/* #NOAPP */
 477               	.LBE76:
 478               	.LBE75:
 479               	.LBE74:
 298:../../../os/oslib/src/chpipes.c ****       chSysUnlock();
 480               		.loc 1 298 0
 481 0130 B201      		movw r22,r4
 482 0132 8981      		ldd r24,Y+1
 483 0134 9A81      		ldd r25,Y+2
 484 0136 0E94 0000 		call chThdSuspendTimeoutS
 485               	.LVL34:
 486               	.LBB77:
 487               	.LBB78:
 488               	.LBB79:
 489               	.LBB80:
 490               		.loc 2 440 0
 491               	/* #APP */
 492               	 ;  440 "../../../os/common/ports/AVR/chcore.h" 1
 493 013a 7894      		sei
 494               	 ;  0 "" 2
 495               	/* #NOAPP */
 496               	.LBE80:
 497               	.LBE79:
 498               	.LBE78:
 499               	.LBE77:
 302:../../../os/oslib/src/chpipes.c ****         break;
 500               		.loc 1 302 0
 501 013c 892B      		or r24,r25
 502 013e 01F4      		brne .+2
 503 0140 00C0      		rjmp .L7
 504               	.LBE88:
 505               	.LBE72:
 315:../../../os/oslib/src/chpipes.c **** 
 506               		.loc 1 315 0
 507 0142 8D81      		ldd r24,Y+5
 508 0144 9E81      		ldd r25,Y+6
 509               	.LVL35:
 510 0146 0E94 0000 		call chMtxUnlock
 511               	.LVL36:
 317:../../../os/oslib/src/chpipes.c **** }
 512               		.loc 1 317 0
 513 014a 8B81      		ldd r24,Y+3
 514 014c 9C81      		ldd r25,Y+4
 515 014e 8C19      		sub r24,r12
 516 0150 9D09      		sbc r25,r13
 517 0152 00C0      		rjmp .L4
 518               	.L12:
 519               	.LBB90:
 307:../../../os/oslib/src/chpipes.c ****       bp += done;
 520               		.loc 1 307 0
 521 0154 4F81      		ldd r20,Y+7
 522 0156 5885      		ldd r21,Y+8
 523 0158 C41A      		sub r12,r20
 524 015a D50A      		sbc r13,r21
 525               	.LVL37:
 308:../../../os/oslib/src/chpipes.c **** 
 526               		.loc 1 308 0
 527 015c 840E      		add r8,r20
 528 015e 951E      		adc r9,r21
 529               	.LVL38:
 311:../../../os/oslib/src/chpipes.c ****     }
 530               		.loc 1 311 0
 531 0160 60E0      		ldi r22,0
 532 0162 70E0      		ldi r23,0
 533 0164 C101      		movw r24,r2
 534 0166 0E94 0000 		call chThdResume
 535               	.LVL39:
 536               	.LBE90:
 290:../../../os/oslib/src/chpipes.c ****     size_t done;
 537               		.loc 1 290 0
 538 016a C114      		cp r12,__zero_reg__
 539 016c D104      		cpc r13,__zero_reg__
 540 016e 01F0      		breq .+2
 541 0170 00C0      		rjmp .L7
 542               	.LVL40:
 543               	.L15:
 544 0172 C12C      		mov r12,__zero_reg__
 545 0174 D12C      		mov r13,__zero_reg__
 315:../../../os/oslib/src/chpipes.c **** 
 546               		.loc 1 315 0
 547 0176 8D81      		ldd r24,Y+5
 548 0178 9E81      		ldd r25,Y+6
 549 017a 0E94 0000 		call chMtxUnlock
 550               	.LVL41:
 317:../../../os/oslib/src/chpipes.c **** }
 551               		.loc 1 317 0
 552 017e 8B81      		ldd r24,Y+3
 553 0180 9C81      		ldd r25,Y+4
 554 0182 8C19      		sub r24,r12
 555 0184 9D09      		sbc r25,r13
 556 0186 00C0      		rjmp .L4
 557               	.LVL42:
 558               	.L20:
 559               	.LBB91:
 560               	.LBB89:
 561               	.LBB87:
 126:../../../os/oslib/src/chpipes.c ****     bp += s1;
 562               		.loc 1 126 0
 563 0188 A701      		movw r20,r14
 564 018a B401      		movw r22,r8
 565 018c 0E94 0000 		call memcpy
 566               	.LVL43:
 128:../../../os/oslib/src/chpipes.c ****     memcpy((void *)pp->buffer, (const void *)bp, s2);
 567               		.loc 1 128 0
 568 0190 6F80      		ldd r6,Y+7
 569 0192 7884      		ldd r7,Y+8
 570 0194 6E18      		sub r6,r14
 571 0196 7F08      		sbc r7,r15
 572               	.LVL44:
 129:../../../os/oslib/src/chpipes.c ****     pp->wrptr = pp->buffer + s2;
 573               		.loc 1 129 0
 574 0198 B401      		movw r22,r8
 575 019a 6E0D      		add r22,r14
 576 019c 7F1D      		adc r23,r15
 577               	.LVL45:
 578 019e A301      		movw r20,r6
 579 01a0 F801      		movw r30,r16
 580 01a2 8081      		ld r24,Z
 581 01a4 9181      		ldd r25,Z+1
 582 01a6 0E94 0000 		call memcpy
 583               	.LVL46:
 130:../../../os/oslib/src/chpipes.c ****   }
 584               		.loc 1 130 0
 585 01aa F801      		movw r30,r16
 586 01ac 8081      		ld r24,Z
 587 01ae 9181      		ldd r25,Z+1
 588 01b0 680E      		add r6,r24
 589 01b2 791E      		adc r7,r25
 590               	.LVL47:
 591 01b4 7582      		std Z+5,r7
 592 01b6 6482      		std Z+4,r6
 593 01b8 00C0      		rjmp .L10
 594               	.LVL48:
 595               	.L19:
 122:../../../os/oslib/src/chpipes.c ****     pp->wrptr += n;
 596               		.loc 1 122 0
 597 01ba A901      		movw r20,r18
 598 01bc B401      		movw r22,r8
 599 01be 0E94 0000 		call memcpy
 600               	.LVL49:
 123:../../../os/oslib/src/chpipes.c ****   }
 601               		.loc 1 123 0
 602 01c2 F801      		movw r30,r16
 603 01c4 8481      		ldd r24,Z+4
 604 01c6 9581      		ldd r25,Z+5
 605 01c8 2F81      		ldd r18,Y+7
 606 01ca 3885      		ldd r19,Y+8
 607 01cc 820F      		add r24,r18
 608 01ce 931F      		adc r25,r19
 609 01d0 9583      		std Z+5,r25
 610 01d2 8483      		std Z+4,r24
 611 01d4 00C0      		rjmp .L10
 612               	.LBE87:
 613               	.LBE89:
 614               	.LBE91:
 615               		.cfi_endproc
 616               	.LFE197:
 618               		.section	.text.chPipeReadTimeout,"ax",@progbits
 619               	.global	chPipeReadTimeout
 621               	chPipeReadTimeout:
 622               	.LFB198:
 319:../../../os/oslib/src/chpipes.c **** 
 320:../../../os/oslib/src/chpipes.c **** /**
 321:../../../os/oslib/src/chpipes.c ****  * @brief   Pipe read with timeout.
 322:../../../os/oslib/src/chpipes.c ****  * @details The function reads data from a pipe into a buffer. The
 323:../../../os/oslib/src/chpipes.c ****  *          operation completes when the specified amount of data has been
 324:../../../os/oslib/src/chpipes.c ****  *          transferred or after the specified timeout or if the pipe has
 325:../../../os/oslib/src/chpipes.c ****  *          been reset.
 326:../../../os/oslib/src/chpipes.c ****  *
 327:../../../os/oslib/src/chpipes.c ****  * @param[in] pp        pointer to an initialized @p pipe_t object
 328:../../../os/oslib/src/chpipes.c ****  * @param[out] bp       pointer to the data buffer
 329:../../../os/oslib/src/chpipes.c ****  * @param[in] n         number of bytes to be read, the value 0 is
 330:../../../os/oslib/src/chpipes.c ****  *                      reserved
 331:../../../os/oslib/src/chpipes.c ****  * @param[in] timeout   number of ticks before the operation timeouts,
 332:../../../os/oslib/src/chpipes.c ****  *                      the following special values are allowed:
 333:../../../os/oslib/src/chpipes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 334:../../../os/oslib/src/chpipes.c ****  *                      - @a TIME_INFINITE no timeout.
 335:../../../os/oslib/src/chpipes.c ****  * @return              The number of bytes effectively transferred. A number
 336:../../../os/oslib/src/chpipes.c ****  *                      lower than @p n means that a timeout occurred or the
 337:../../../os/oslib/src/chpipes.c ****  *                      pipe went in reset state.
 338:../../../os/oslib/src/chpipes.c ****  *
 339:../../../os/oslib/src/chpipes.c ****  * @api
 340:../../../os/oslib/src/chpipes.c ****  */
 341:../../../os/oslib/src/chpipes.c **** size_t chPipeReadTimeout(pipe_t *pp, uint8_t *bp,
 342:../../../os/oslib/src/chpipes.c ****                          size_t n, sysinterval_t timeout) {
 623               		.loc 1 342 0
 624               		.cfi_startproc
 625               	.LVL50:
 626 0000 2F92      		push r2
 627               	.LCFI26:
 628               		.cfi_def_cfa_offset 3
 629               		.cfi_offset 2, -2
 630 0002 3F92      		push r3
 631               	.LCFI27:
 632               		.cfi_def_cfa_offset 4
 633               		.cfi_offset 3, -3
 634 0004 4F92      		push r4
 635               	.LCFI28:
 636               		.cfi_def_cfa_offset 5
 637               		.cfi_offset 4, -4
 638 0006 5F92      		push r5
 639               	.LCFI29:
 640               		.cfi_def_cfa_offset 6
 641               		.cfi_offset 5, -5
 642 0008 6F92      		push r6
 643               	.LCFI30:
 644               		.cfi_def_cfa_offset 7
 645               		.cfi_offset 6, -6
 646 000a 7F92      		push r7
 647               	.LCFI31:
 648               		.cfi_def_cfa_offset 8
 649               		.cfi_offset 7, -7
 650 000c 8F92      		push r8
 651               	.LCFI32:
 652               		.cfi_def_cfa_offset 9
 653               		.cfi_offset 8, -8
 654 000e 9F92      		push r9
 655               	.LCFI33:
 656               		.cfi_def_cfa_offset 10
 657               		.cfi_offset 9, -9
 658 0010 AF92      		push r10
 659               	.LCFI34:
 660               		.cfi_def_cfa_offset 11
 661               		.cfi_offset 10, -10
 662 0012 BF92      		push r11
 663               	.LCFI35:
 664               		.cfi_def_cfa_offset 12
 665               		.cfi_offset 11, -11
 666 0014 CF92      		push r12
 667               	.LCFI36:
 668               		.cfi_def_cfa_offset 13
 669               		.cfi_offset 12, -12
 670 0016 DF92      		push r13
 671               	.LCFI37:
 672               		.cfi_def_cfa_offset 14
 673               		.cfi_offset 13, -13
 674 0018 EF92      		push r14
 675               	.LCFI38:
 676               		.cfi_def_cfa_offset 15
 677               		.cfi_offset 14, -14
 678 001a FF92      		push r15
 679               	.LCFI39:
 680               		.cfi_def_cfa_offset 16
 681               		.cfi_offset 15, -15
 682 001c 0F93      		push r16
 683               	.LCFI40:
 684               		.cfi_def_cfa_offset 17
 685               		.cfi_offset 16, -16
 686 001e 1F93      		push r17
 687               	.LCFI41:
 688               		.cfi_def_cfa_offset 18
 689               		.cfi_offset 17, -17
 690 0020 CF93      		push r28
 691               	.LCFI42:
 692               		.cfi_def_cfa_offset 19
 693               		.cfi_offset 28, -18
 694 0022 DF93      		push r29
 695               	.LCFI43:
 696               		.cfi_def_cfa_offset 20
 697               		.cfi_offset 29, -19
 698 0024 CDB7      		in r28,__SP_L__
 699 0026 DEB7      		in r29,__SP_H__
 700               	.LCFI44:
 701               		.cfi_def_cfa_register 28
 702 0028 2897      		sbiw r28,8
 703               	.LCFI45:
 704               		.cfi_def_cfa_offset 28
 705 002a 0FB6      		in __tmp_reg__,__SREG__
 706 002c F894      		cli
 707 002e DEBF      		out __SP_H__,r29
 708 0030 0FBE      		out __SREG__,__tmp_reg__
 709 0032 CDBF      		out __SP_L__,r28
 710               	/* prologue: function */
 711               	/* frame size = 8 */
 712               	/* stack size = 26 */
 713               	.L__stack_usage = 26
 714 0034 8C01      		movw r16,r24
 715 0036 4B01      		movw r8,r22
 716 0038 5C83      		std Y+4,r21
 717 003a 4B83      		std Y+3,r20
 718 003c 2901      		movw r4,r18
 719               	.LVL51:
 343:../../../os/oslib/src/chpipes.c ****   size_t max = n;
 344:../../../os/oslib/src/chpipes.c **** 
 345:../../../os/oslib/src/chpipes.c ****   chDbgCheck(n > 0U);
 346:../../../os/oslib/src/chpipes.c **** 
 347:../../../os/oslib/src/chpipes.c ****   /* If the pipe is in reset state then returns immediately.*/
 348:../../../os/oslib/src/chpipes.c ****   if (pp->reset) {
 720               		.loc 1 348 0
 721 003e FC01      		movw r30,r24
 722 0040 8285      		ldd r24,Z+10
 723               	.LVL52:
 724 0042 8823      		tst r24
 725 0044 01F0      		breq .L35
 349:../../../os/oslib/src/chpipes.c ****     return (size_t)0;
 726               		.loc 1 349 0
 727 0046 80E0      		ldi r24,0
 728 0048 90E0      		ldi r25,0
 729               	.LVL53:
 730               	.L22:
 731               	/* epilogue start */
 350:../../../os/oslib/src/chpipes.c ****   }
 351:../../../os/oslib/src/chpipes.c **** 
 352:../../../os/oslib/src/chpipes.c ****   PR_LOCK(pp);
 353:../../../os/oslib/src/chpipes.c **** 
 354:../../../os/oslib/src/chpipes.c ****   while (n > 0U) {
 355:../../../os/oslib/src/chpipes.c ****     size_t done;
 356:../../../os/oslib/src/chpipes.c **** 
 357:../../../os/oslib/src/chpipes.c ****     done = pipe_read(pp, bp, n);
 358:../../../os/oslib/src/chpipes.c ****     if (done == (size_t)0) {
 359:../../../os/oslib/src/chpipes.c ****       msg_t msg;
 360:../../../os/oslib/src/chpipes.c **** 
 361:../../../os/oslib/src/chpipes.c ****       chSysLock();
 362:../../../os/oslib/src/chpipes.c ****       msg = chThdSuspendTimeoutS(&pp->rtr, timeout);
 363:../../../os/oslib/src/chpipes.c ****       chSysUnlock();
 364:../../../os/oslib/src/chpipes.c **** 
 365:../../../os/oslib/src/chpipes.c ****       /* Anything except MSG_OK causes the operation to stop.*/
 366:../../../os/oslib/src/chpipes.c ****       if (msg != MSG_OK) {
 367:../../../os/oslib/src/chpipes.c ****         break;
 368:../../../os/oslib/src/chpipes.c ****       }
 369:../../../os/oslib/src/chpipes.c ****     }
 370:../../../os/oslib/src/chpipes.c ****     else {
 371:../../../os/oslib/src/chpipes.c ****       n  -= done;
 372:../../../os/oslib/src/chpipes.c ****       bp += done;
 373:../../../os/oslib/src/chpipes.c **** 
 374:../../../os/oslib/src/chpipes.c ****       /* Resuming the writer, if present.*/
 375:../../../os/oslib/src/chpipes.c ****       chThdResume(&pp->wtr, MSG_OK);
 376:../../../os/oslib/src/chpipes.c ****     }
 377:../../../os/oslib/src/chpipes.c ****   }
 378:../../../os/oslib/src/chpipes.c **** 
 379:../../../os/oslib/src/chpipes.c ****   PR_UNLOCK(pp);
 380:../../../os/oslib/src/chpipes.c **** 
 381:../../../os/oslib/src/chpipes.c ****   return max - n;
 382:../../../os/oslib/src/chpipes.c **** }
 732               		.loc 1 382 0
 733 004a 2896      		adiw r28,8
 734 004c 0FB6      		in __tmp_reg__,__SREG__
 735 004e F894      		cli
 736 0050 DEBF      		out __SP_H__,r29
 737 0052 0FBE      		out __SREG__,__tmp_reg__
 738 0054 CDBF      		out __SP_L__,r28
 739 0056 DF91      		pop r29
 740 0058 CF91      		pop r28
 741 005a 1F91      		pop r17
 742 005c 0F91      		pop r16
 743               	.LVL54:
 744 005e FF90      		pop r15
 745 0060 EF90      		pop r14
 746 0062 DF90      		pop r13
 747 0064 CF90      		pop r12
 748 0066 BF90      		pop r11
 749 0068 AF90      		pop r10
 750 006a 9F90      		pop r9
 751 006c 8F90      		pop r8
 752               	.LVL55:
 753 006e 7F90      		pop r7
 754 0070 6F90      		pop r6
 755 0072 5F90      		pop r5
 756 0074 4F90      		pop r4
 757               	.LVL56:
 758 0076 3F90      		pop r3
 759 0078 2F90      		pop r2
 760 007a 0895      		ret
 761               	.LVL57:
 762               	.L35:
 352:../../../os/oslib/src/chpipes.c **** 
 763               		.loc 1 352 0
 764 007c 9801      		movw r18,r16
 765 007e 215E      		subi r18,-31
 766 0080 3F4F      		sbci r19,-1
 767 0082 3E83      		std Y+6,r19
 768 0084 2D83      		std Y+5,r18
 769 0086 C901      		movw r24,r18
 770 0088 0E94 0000 		call chMtxLock
 771               	.LVL58:
 354:../../../os/oslib/src/chpipes.c ****     size_t done;
 772               		.loc 1 354 0
 773 008c 8B81      		ldd r24,Y+3
 774 008e 9C81      		ldd r25,Y+4
 775 0090 892B      		or r24,r25
 776 0092 01F4      		brne .+2
 777 0094 00C0      		rjmp .L33
 778 0096 5801      		movw r10,r16
 779 0098 9FE0      		ldi r25,15
 780 009a A90E      		add r10,r25
 781 009c B11C      		adc r11,__zero_reg__
 782 009e CB80      		ldd r12,Y+3
 783 00a0 DC80      		ldd r13,Y+4
 784               	.LBB103:
 375:../../../os/oslib/src/chpipes.c ****     }
 785               		.loc 1 375 0
 786 00a2 1801      		movw r2,r16
 787 00a4 EBE0      		ldi r30,11
 788 00a6 2E0E      		add r2,r30
 789 00a8 311C      		adc r3,__zero_reg__
 790               	.LBB104:
 362:../../../os/oslib/src/chpipes.c ****       chSysUnlock();
 791               		.loc 1 362 0
 792 00aa 9801      		movw r18,r16
 793 00ac 235F      		subi r18,-13
 794 00ae 3F4F      		sbci r19,-1
 795 00b0 3A83      		std Y+2,r19
 796 00b2 2983      		std Y+1,r18
 797               	.LVL59:
 798               	.L25:
 799               	.LBE104:
 800               	.LBB112:
 801               	.LBB113:
 159:../../../os/oslib/src/chpipes.c **** 
 802               		.loc 1 159 0
 803 00b4 C501      		movw r24,r10
 804 00b6 0E94 0000 		call chMtxLock
 805               	.LVL60:
 806 00ba F801      		movw r30,r16
 807 00bc 8085      		ldd r24,Z+8
 808 00be 9185      		ldd r25,Z+9
 809               	.LVL61:
 810 00c0 9887      		std Y+8,r25
 811 00c2 8F83      		std Y+7,r24
 812 00c4 C816      		cp r12,r24
 813 00c6 D906      		cpc r13,r25
 814 00c8 00F4      		brsh .L26
 815 00ca D886      		std Y+8,r13
 816 00cc CF82      		std Y+7,r12
 817               	.L26:
 818               	.LVL62:
 165:../../../os/oslib/src/chpipes.c **** 
 819               		.loc 1 165 0
 820 00ce 2F81      		ldd r18,Y+7
 821 00d0 3885      		ldd r19,Y+8
 822 00d2 821B      		sub r24,r18
 823 00d4 930B      		sbc r25,r19
 824 00d6 F801      		movw r30,r16
 825 00d8 9187      		std Z+9,r25
 826 00da 8087      		std Z+8,r24
 169:../../../os/oslib/src/chpipes.c ****   /*lint -restore*/
 827               		.loc 1 169 0
 828 00dc 6681      		ldd r22,Z+6
 829 00de 7781      		ldd r23,Z+7
 830 00e0 E280      		ldd r14,Z+2
 831 00e2 F380      		ldd r15,Z+3
 832 00e4 E61A      		sub r14,r22
 833 00e6 F70A      		sbc r15,r23
 834               	.LVL63:
 172:../../../os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, n);
 835               		.loc 1 172 0
 836 00e8 2E15      		cp r18,r14
 837 00ea 3F05      		cpc r19,r15
 838 00ec 00F4      		brsh .+2
 839 00ee 00C0      		rjmp .L36
 176:../../../os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->rdptr, s1);
 840               		.loc 1 176 0
 841 00f0 8F81      		ldd r24,Y+7
 842 00f2 9885      		ldd r25,Y+8
 843 00f4 E816      		cp r14,r24
 844 00f6 F906      		cpc r15,r25
 845 00f8 00F4      		brsh .+2
 846 00fa 00C0      		rjmp .L37
 184:../../../os/oslib/src/chpipes.c ****     pp->rdptr = pp->buffer;
 847               		.loc 1 184 0
 848 00fc 4F81      		ldd r20,Y+7
 849 00fe 5885      		ldd r21,Y+8
 850 0100 C401      		movw r24,r8
 851 0102 0E94 0000 		call memcpy
 852               	.LVL64:
 185:../../../os/oslib/src/chpipes.c ****   }
 853               		.loc 1 185 0
 854 0106 F801      		movw r30,r16
 855 0108 8081      		ld r24,Z
 856 010a 9181      		ldd r25,Z+1
 857 010c 9783      		std Z+7,r25
 858 010e 8683      		std Z+6,r24
 859               	.LVL65:
 860               	.L28:
 188:../../../os/oslib/src/chpipes.c **** 
 861               		.loc 1 188 0
 862 0110 C501      		movw r24,r10
 863 0112 0E94 0000 		call chMtxUnlock
 864               	.LVL66:
 865               	.LBE113:
 866               	.LBE112:
 358:../../../os/oslib/src/chpipes.c ****       msg_t msg;
 867               		.loc 1 358 0
 868 0116 2F81      		ldd r18,Y+7
 869 0118 3885      		ldd r19,Y+8
 870 011a 232B      		or r18,r19
 871 011c 01F4      		brne .L30
 872               	.LBB115:
 873               	.LBB105:
 874               	.LBB106:
 875               	.LBB107:
 430:../../../os/common/ports/AVR/chcore.h **** }
 876               		.loc 2 430 0
 877               	/* #APP */
 878               	 ;  430 "../../../os/common/ports/AVR/chcore.h" 1
 879 011e F894      		cli
 880               	 ;  0 "" 2
 881               	/* #NOAPP */
 882               	.LBE107:
 883               	.LBE106:
 884               	.LBE105:
 362:../../../os/oslib/src/chpipes.c ****       chSysUnlock();
 885               		.loc 1 362 0
 886 0120 B201      		movw r22,r4
 887 0122 8981      		ldd r24,Y+1
 888 0124 9A81      		ldd r25,Y+2
 889 0126 0E94 0000 		call chThdSuspendTimeoutS
 890               	.LVL67:
 891               	.LBB108:
 892               	.LBB109:
 893               	.LBB110:
 894               	.LBB111:
 895               		.loc 2 440 0
 896               	/* #APP */
 897               	 ;  440 "../../../os/common/ports/AVR/chcore.h" 1
 898 012a 7894      		sei
 899               	 ;  0 "" 2
 900               	/* #NOAPP */
 901               	.LBE111:
 902               	.LBE110:
 903               	.LBE109:
 904               	.LBE108:
 366:../../../os/oslib/src/chpipes.c ****         break;
 905               		.loc 1 366 0
 906 012c 892B      		or r24,r25
 907 012e 01F0      		breq .L25
 908               	.LBE115:
 909               	.LBE103:
 379:../../../os/oslib/src/chpipes.c **** 
 910               		.loc 1 379 0
 911 0130 8D81      		ldd r24,Y+5
 912 0132 9E81      		ldd r25,Y+6
 913               	.LVL68:
 914 0134 0E94 0000 		call chMtxUnlock
 915               	.LVL69:
 381:../../../os/oslib/src/chpipes.c **** }
 916               		.loc 1 381 0
 917 0138 8B81      		ldd r24,Y+3
 918 013a 9C81      		ldd r25,Y+4
 919 013c 8C19      		sub r24,r12
 920 013e 9D09      		sbc r25,r13
 921 0140 00C0      		rjmp .L22
 922               	.L30:
 923               	.LBB117:
 371:../../../os/oslib/src/chpipes.c ****       bp += done;
 924               		.loc 1 371 0
 925 0142 8F81      		ldd r24,Y+7
 926 0144 9885      		ldd r25,Y+8
 927 0146 C81A      		sub r12,r24
 928 0148 D90A      		sbc r13,r25
 929               	.LVL70:
 372:../../../os/oslib/src/chpipes.c **** 
 930               		.loc 1 372 0
 931 014a 880E      		add r8,r24
 932 014c 991E      		adc r9,r25
 933               	.LVL71:
 375:../../../os/oslib/src/chpipes.c ****     }
 934               		.loc 1 375 0
 935 014e 60E0      		ldi r22,0
 936 0150 70E0      		ldi r23,0
 937 0152 C101      		movw r24,r2
 938 0154 0E94 0000 		call chThdResume
 939               	.LVL72:
 940               	.LBE117:
 354:../../../os/oslib/src/chpipes.c ****     size_t done;
 941               		.loc 1 354 0
 942 0158 C114      		cp r12,__zero_reg__
 943 015a D104      		cpc r13,__zero_reg__
 944 015c 01F0      		breq .+2
 945 015e 00C0      		rjmp .L25
 946               	.LVL73:
 947               	.L33:
 948 0160 C12C      		mov r12,__zero_reg__
 949 0162 D12C      		mov r13,__zero_reg__
 379:../../../os/oslib/src/chpipes.c **** 
 950               		.loc 1 379 0
 951 0164 8D81      		ldd r24,Y+5
 952 0166 9E81      		ldd r25,Y+6
 953 0168 0E94 0000 		call chMtxUnlock
 954               	.LVL74:
 381:../../../os/oslib/src/chpipes.c **** }
 955               		.loc 1 381 0
 956 016c 8B81      		ldd r24,Y+3
 957 016e 9C81      		ldd r25,Y+4
 958 0170 8C19      		sub r24,r12
 959 0172 9D09      		sbc r25,r13
 960 0174 00C0      		rjmp .L22
 961               	.LVL75:
 962               	.L37:
 963               	.LBB118:
 964               	.LBB116:
 965               	.LBB114:
 177:../../../os/oslib/src/chpipes.c ****     bp += s1;
 966               		.loc 1 177 0
 967 0176 A701      		movw r20,r14
 968 0178 C401      		movw r24,r8
 969 017a 0E94 0000 		call memcpy
 970               	.LVL76:
 179:../../../os/oslib/src/chpipes.c ****     memcpy((void *)bp, (void *)pp->buffer, s2);
 971               		.loc 1 179 0
 972 017e 6F80      		ldd r6,Y+7
 973 0180 7884      		ldd r7,Y+8
 974 0182 6E18      		sub r6,r14
 975 0184 7F08      		sbc r7,r15
 976               	.LVL77:
 180:../../../os/oslib/src/chpipes.c ****     pp->rdptr = pp->buffer + s2;
 977               		.loc 1 180 0
 978 0186 F801      		movw r30,r16
 979 0188 6081      		ld r22,Z
 980 018a 7181      		ldd r23,Z+1
 981 018c A301      		movw r20,r6
 982 018e C401      		movw r24,r8
 983 0190 8E0D      		add r24,r14
 984 0192 9F1D      		adc r25,r15
 985               	.LVL78:
 986 0194 0E94 0000 		call memcpy
 987               	.LVL79:
 181:../../../os/oslib/src/chpipes.c ****   }
 988               		.loc 1 181 0
 989 0198 F801      		movw r30,r16
 990 019a 8081      		ld r24,Z
 991 019c 9181      		ldd r25,Z+1
 992 019e 680E      		add r6,r24
 993 01a0 791E      		adc r7,r25
 994               	.LVL80:
 995 01a2 7782      		std Z+7,r7
 996 01a4 6682      		std Z+6,r6
 997 01a6 00C0      		rjmp .L28
 998               	.LVL81:
 999               	.L36:
 173:../../../os/oslib/src/chpipes.c ****     pp->rdptr += n;
 1000               		.loc 1 173 0
 1001 01a8 A901      		movw r20,r18
 1002 01aa C401      		movw r24,r8
 1003 01ac 0E94 0000 		call memcpy
 1004               	.LVL82:
 174:../../../os/oslib/src/chpipes.c ****   }
 1005               		.loc 1 174 0
 1006 01b0 F801      		movw r30,r16
 1007 01b2 8681      		ldd r24,Z+6
 1008 01b4 9781      		ldd r25,Z+7
 1009 01b6 2F81      		ldd r18,Y+7
 1010 01b8 3885      		ldd r19,Y+8
 1011 01ba 820F      		add r24,r18
 1012 01bc 931F      		adc r25,r19
 1013 01be 9783      		std Z+7,r25
 1014 01c0 8683      		std Z+6,r24
 1015 01c2 00C0      		rjmp .L28
 1016               	.LBE114:
 1017               	.LBE116:
 1018               	.LBE118:
 1019               		.cfi_endproc
 1020               	.LFE198:
 1022               		.text
 1023               	.Letext0:
 1024               		.file 4 "/usr/lib/gcc/avr/5.4.0/include/stddef.h"
 1025               		.file 5 "/usr/lib/avr/include/stdint.h"
 1026               		.file 6 "../../../os/common/ports/AVR/compilers/GCC/chtypes.h"
 1027               		.file 7 "../../../os/rt/include/chearly.h"
 1028               		.file 8 "../../../os/rt/include/chobjects.h"
 1029               		.file 9 "../../../os/rt/include/chrfcu.h"
 1030               		.file 10 "../../../os/rt/include/chdebug.h"
 1031               		.file 11 "../../../os/rt/include/chtime.h"
 1032               		.file 12 "../../../os/rt/include/chlists.h"
 1033               		.file 13 "../../../os/rt/include/chsem.h"
 1034               		.file 14 "../../../os/rt/include/chmtx.h"
 1035               		.file 15 "../../../os/rt/include/chsys.h"
 1036               		.file 16 "../../../os/rt/include/chthreads.h"
 1037               		.file 17 "../../../os/rt/include/chschd.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chpipes.c
     /tmp/ccySHrbr.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccySHrbr.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccySHrbr.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccySHrbr.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccySHrbr.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccySHrbr.s:13     .text.chPipeObjectInit:0000000000000000 chPipeObjectInit
     /tmp/ccySHrbr.s:85     .text.chPipeReset:0000000000000000 chPipeReset
     /tmp/ccySHrbr.s:196    .text.chPipeWriteTimeout:0000000000000000 chPipeWriteTimeout
     /tmp/ccySHrbr.s:621    .text.chPipeReadTimeout:0000000000000000 chPipeReadTimeout

UNDEFINED SYMBOLS
chMtxObjectInit
chMtxLock
chThdResumeI
chSchRescheduleS
chMtxUnlock
memcpy
chThdSuspendTimeoutS
chThdResume
